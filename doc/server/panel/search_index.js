var search_data = {"index":{"searchIndex":["application","helpers","measuring","index","base","memory","redis","indexed","indexes","wrappers","bundle","calculation","location","wrapper","serial","indexing","indexes","interfaces","liveparameters","couldnotupdateconfigurationerror","internals","adapters","rack","base","liveparameters","query","frontendadapters","index","backend","file","basic","json","marshal","text","files","redis","basic","listhash","stringhash","query","indexes","full","array","query","base","differenttypeserror","full","live","harakiri","sources","base","csv","couch","db","delicious","nocsvfilegiven","nocouchdbgiven","[]()","allocations_for()","app_for()","backup()","backup()","backup()","backup_directory()","backup_file_path_of()","cache_ok?()","cache_ok?()","cache_small?()","cache_small?()","call()","call()","category()","check_external_interface()","clear()","clear()","close_child()","collection()","collection()","combinations_type_for()","connect_backend()","connect_backend()","default_indexing()","default_querying()","define_category()","define_ranged_category()","delete()","delete()","delete()","dump()","dump()","dump()","dump()","dump()","dump_configuration()","dump_index()","dump_similarity()","dump_weights()","empty_results()","execute()","expand_combinations_from()","extension()","extension()","extension()","extension()","extract_configuration()","extracted()","find()","generate_cache_only()","generate_index_only()","harakiri()","harakiri()","harakiri?()","harvest()","harvest()","harvest()","harvest()","harvest()","ids()","ids()","index()","index()","index()","index_cache_ok?()","index_cache_small?()","index_for_tests()","indexing_message()","key_format()","key_format()","kill_each_worker_except()","kill_worker()","load()","load()","load()","load()","load()","load_configuration()","load_index()","load_similarity()","load_weights()","member()","member()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","open_for_indexing()","parameters()","prepare_backup()","process()","querying_removes_characters()","querying_removes_characters=()","querying_splits_text_on()","querying_splits_text_on=()","querying_stopwords()","querying_stopwords=()","raise_different()","raise_no_source()","ranged_category()","recalculate()","recalculate()","register()","register()","reload()","remove_worker()","respond_with()","restore()","restore()","result_type()","result_type()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","search()","search_with_text()","setting()","similarity_cache_ok?()","similarity_cache_small?()","size_of()","size_of()","start_master_process_thread()","take_snapshot()","take_snapshot()","timed()","to_app()","to_app()","to_log()","to_s()","to_s()","tokenized()","try_updating_configuration_with()","weight()","weight()","weights_cache_ok?()","weights_cache_small?()","worker_pids()","write_parent()","bundling.rb","constants.rb","deployment.rb","picky-tasks.rb","picky.rb","aliases.rb","application.rb","west_european.rb","cli.rb","cores.rb","aliases.rb","base.rb","memory.rb","redis.rb","index_bundle.rb","indexes.rb","indexes.rb","live_parameters.rb","rack.rb","base.rb","live_parameters.rb","query.rb","location.rb","index.rb","maybe_compile.rb","makefile","extconf.rb","mkmf.log","performant.c","array.rb","hash.rb","module.rb","object.rb","symbol.rb","rack.rb","base.rb","default.rb","none.rb","strategy.rb","substring.rb","partial_generator.rb","default.rb","double_levenshtone.rb","none.rb","strategy.rb","similarity_generator.rb","strategy.rb","default.rb","logarithmic.rb","strategy.rb","weights_generator.rb","measuring.rb","backend.rb","basic.rb","json.rb","marshal.rb","text.rb","files.rb","redis.rb","basic.rb","list_hash.rb","string_hash.rb","base.rb","memory.rb","redis.rb","categories.rb","category.rb","index.rb","calculation.rb","location.rb","wrapper.rb","exact_first.rb","no_source_specified_error.rb","serial.rb","solr.rb","base.rb","memory.rb","redis.rb","super_base.rb","categories.rb","category.rb","index.rb","performant.rb","allocation.rb","allocations.rb","combination.rb","base.rb","memory.rb","redis.rb","indexes.rb","qualifiers.rb","token.rb","tokens.rb","weights.rb","base.rb","full.rb","live.rb","sunspot-solr.pid","schema_generator.rb","base.rb","index.rb","query.rb","loader.rb","search.rb","base.rb","full.rb","live.rb","solr.rb","harakiri.rb","signals.rb","base.rb","couch.rb","csv.rb","db.rb","delicious.rb","base.rb","location.rb","application.rake","framework.rake","index.rake","routes.rake","server.rake","shortcuts.rake","solr.rake","spec.rake","statistics.rake","try.rake"],"longSearchIndex":["lib/picky/application.rb","lib/picky/internals/helpers/measuring.rb","helpers","lib/picky/index/redis.rb","index","index","index","lib/picky/internals/indexed/wrappers/bundle/wrapper.rb","indexed","indexed","indexed::wrappers","indexed::wrappers::bundle","indexed::wrappers::bundle","indexed::wrappers::bundle","indexers","lib/picky/indexing/indexes.rb","indexing","lib/picky/interfaces/live_parameters.rb","interfaces","interfaces::liveparameters","lib/picky/internals/tokenizers/query.rb","internals","internals::adapters","internals::adapters::rack","internals::adapters::rack","internals::adapters::rack","internals","internals","internals::index","internals::index","internals::index::file","internals::index::file","internals::index::file","internals::index::file","internals::index","internals::index","internals::index::redis","internals::index::redis","internals::index::redis","internals","internals::query","internals::results","performant","lib/picky/query/solr.rb","query","query::base","query","query","rack","lib/picky/sources/wrappers/location.rb","sources","sources","sources","sources","sources","sources","sources","indexed::indexes","internals::query::indexes","internals::adapters::rack","internals::index::backend","internals::index::file::basic","internals::index::redis::basic","internals::index::file::basic","internals::index::file::basic","internals::index::file::basic","internals::index::redis::basic","internals::index::file::basic","internals::index::redis::basic","application","rack::harakiri","index::base","application","indexed::indexes","indexing::indexes","interfaces::liveparameters","internals::index::redis::listhash","internals::index::redis::stringhash","query::base","sources::base","sources::db","application","application","index::base","index::base","internals::index::backend","internals::index::file::basic","internals::index::redis::basic","internals::index::file::json","internals::index::file::marshal","internals::index::file::text","internals::index::redis::listhash","internals::index::redis::stringhash","internals::index::backend","internals::index::backend","internals::index::backend","internals::index::backend","query::base","query::base","internals::query::indexes","internals::index::file::basic","internals::index::file::json","internals::index::file::marshal","internals::index::file::text","interfaces::liveparameters","internals::adapters::rack::query","indexing::indexes","indexing::indexes","indexing::indexes","interfaces::liveparameters","rack::harakiri","rack::harakiri","sources::base","sources::csv","sources::couch","sources::db","sources::delicious","indexed::wrappers::bundle::calculation","internals::index::redis","application","indexers::serial","indexing::indexes","internals::index::backend","internals::index::backend","indexing::indexes","indexers::serial","indexers::serial","sources::couch","interfaces::liveparameters","interfaces::liveparameters","indexed::wrappers::bundle::location","internals::index::file::json","internals::index::file::marshal","internals::index::file::text","internals::index::redis::basic","internals::index::backend","internals::index::backend","internals::index::backend","internals::index::backend","internals::index::redis::listhash","internals::index::redis::stringhash","index::base","index::memory","index::redis","indexed::indexes","indexed::wrappers::bundle::location","indexed::wrappers::bundle::wrapper","indexers::serial","indexing::indexes","interfaces::liveparameters","interfaces::liveparameters::couldnotupdateconfigurationerror","internals::adapters::rack::liveparameters","internals::adapters::rack::query","internals::index::backend","internals::index::file::basic","internals::index::files","internals::index::redis","internals::index::redis::basic","internals::query::indexes","query::base","query::base::differenttypeserror","rack::harakiri","sources::csv","sources::couch","sources::db","sources::delicious","internals::index::file::text","interfaces::liveparameters","internals::index::file::basic","indexers::serial","interfaces::liveparameters","interfaces::liveparameters","interfaces::liveparameters","interfaces::liveparameters","interfaces::liveparameters","interfaces::liveparameters","query::base","indexers::serial","index::base","indexed::wrappers::bundle::calculation","indexed::wrappers::bundle::location","indexed::indexes","indexing::indexes","indexed::indexes","interfaces::liveparameters","internals::adapters::rack::base","internals::index::backend","internals::index::file::basic","query::full","query::live","internals::index::backend","internals::index::file::json","internals::index::file::marshal","internals::index::file::text","internals::index::redis::basic","query::base","query::base","internals::index::redis","internals::index::backend","internals::index::backend","internals::index::file::basic","internals::index::redis::basic","interfaces::liveparameters","sources::base","sources::db","helpers::measuring","internals::adapters::rack::liveparameters","internals::adapters::rack::query","internals::results::full","query::base","query::base::differenttypeserror","query::base","interfaces::liveparameters","indexed::wrappers::bundle::calculation","internals::index::redis","internals::index::backend","internals::index::backend","interfaces::liveparameters","interfaces::liveparameters","files/lib/bundling_rb.html","files/lib/constants_rb.html","files/lib/deployment_rb.html","files/lib/picky-tasks_rb.html","files/lib/picky_rb.html","files/lib/picky/aliases_rb.html","files/lib/picky/application_rb.html","files/lib/picky/character_substituters/west_european_rb.html","files/lib/picky/cli_rb.html","files/lib/picky/cores_rb.html","files/lib/picky/generators/aliases_rb.html","files/lib/picky/index/base_rb.html","files/lib/picky/index/memory_rb.html","files/lib/picky/index/redis_rb.html","files/lib/picky/index_bundle_rb.html","files/lib/picky/indexed/indexes_rb.html","files/lib/picky/indexing/indexes_rb.html","files/lib/picky/interfaces/live_parameters_rb.html","files/lib/picky/internals/adapters/rack_rb.html","files/lib/picky/internals/adapters/rack/base_rb.html","files/lib/picky/internals/adapters/rack/live_parameters_rb.html","files/lib/picky/internals/adapters/rack/query_rb.html","files/lib/picky/internals/calculations/location_rb.html","files/lib/picky/internals/configuration/index_rb.html","files/lib/picky/internals/ext/maybe_compile_rb.html","files/lib/picky/internals/ext/ruby19/makefile.html","files/lib/picky/internals/ext/ruby19/extconf_rb.html","files/lib/picky/internals/ext/ruby19/mkmf_log.html","files/lib/picky/internals/ext/ruby19/performant_c.html","files/lib/picky/internals/extensions/array_rb.html","files/lib/picky/internals/extensions/hash_rb.html","files/lib/picky/internals/extensions/module_rb.html","files/lib/picky/internals/extensions/object_rb.html","files/lib/picky/internals/extensions/symbol_rb.html","files/lib/picky/internals/frontend_adapters/rack_rb.html","files/lib/picky/internals/generators/base_rb.html","files/lib/picky/internals/generators/partial/default_rb.html","files/lib/picky/internals/generators/partial/none_rb.html","files/lib/picky/internals/generators/partial/strategy_rb.html","files/lib/picky/internals/generators/partial/substring_rb.html","files/lib/picky/internals/generators/partial_generator_rb.html","files/lib/picky/internals/generators/similarity/default_rb.html","files/lib/picky/internals/generators/similarity/double_levenshtone_rb.html","files/lib/picky/internals/generators/similarity/none_rb.html","files/lib/picky/internals/generators/similarity/strategy_rb.html","files/lib/picky/internals/generators/similarity_generator_rb.html","files/lib/picky/internals/generators/strategy_rb.html","files/lib/picky/internals/generators/weights/default_rb.html","files/lib/picky/internals/generators/weights/logarithmic_rb.html","files/lib/picky/internals/generators/weights/strategy_rb.html","files/lib/picky/internals/generators/weights_generator_rb.html","files/lib/picky/internals/helpers/measuring_rb.html","files/lib/picky/internals/index/backend_rb.html","files/lib/picky/internals/index/file/basic_rb.html","files/lib/picky/internals/index/file/json_rb.html","files/lib/picky/internals/index/file/marshal_rb.html","files/lib/picky/internals/index/file/text_rb.html","files/lib/picky/internals/index/files_rb.html","files/lib/picky/internals/index/redis_rb.html","files/lib/picky/internals/index/redis/basic_rb.html","files/lib/picky/internals/index/redis/list_hash_rb.html","files/lib/picky/internals/index/redis/string_hash_rb.html","files/lib/picky/internals/indexed/bundle/base_rb.html","files/lib/picky/internals/indexed/bundle/memory_rb.html","files/lib/picky/internals/indexed/bundle/redis_rb.html","files/lib/picky/internals/indexed/categories_rb.html","files/lib/picky/internals/indexed/category_rb.html","files/lib/picky/internals/indexed/index_rb.html","files/lib/picky/internals/indexed/wrappers/bundle/calculation_rb.html","files/lib/picky/internals/indexed/wrappers/bundle/location_rb.html","files/lib/picky/internals/indexed/wrappers/bundle/wrapper_rb.html","files/lib/picky/internals/indexed/wrappers/exact_first_rb.html","files/lib/picky/internals/indexers/no_source_specified_error_rb.html","files/lib/picky/internals/indexers/serial_rb.html","files/lib/picky/internals/indexers/solr_rb.html","files/lib/picky/internals/indexing/bundle/base_rb.html","files/lib/picky/internals/indexing/bundle/memory_rb.html","files/lib/picky/internals/indexing/bundle/redis_rb.html","files/lib/picky/internals/indexing/bundle/super_base_rb.html","files/lib/picky/internals/indexing/categories_rb.html","files/lib/picky/internals/indexing/category_rb.html","files/lib/picky/internals/indexing/index_rb.html","files/lib/picky/internals/performant_rb.html","files/lib/picky/internals/query/allocation_rb.html","files/lib/picky/internals/query/allocations_rb.html","files/lib/picky/internals/query/combination_rb.html","files/lib/picky/internals/query/combinations/base_rb.html","files/lib/picky/internals/query/combinations/memory_rb.html","files/lib/picky/internals/query/combinations/redis_rb.html","files/lib/picky/internals/query/indexes_rb.html","files/lib/picky/internals/query/qualifiers_rb.html","files/lib/picky/internals/query/token_rb.html","files/lib/picky/internals/query/tokens_rb.html","files/lib/picky/internals/query/weights_rb.html","files/lib/picky/internals/results/base_rb.html","files/lib/picky/internals/results/full_rb.html","files/lib/picky/internals/results/live_rb.html","files/lib/picky/internals/solr/pids/sunspot-solr_pid.html","files/lib/picky/internals/solr/schema_generator_rb.html","files/lib/picky/internals/tokenizers/base_rb.html","files/lib/picky/internals/tokenizers/index_rb.html","files/lib/picky/internals/tokenizers/query_rb.html","files/lib/picky/loader_rb.html","files/lib/picky/loggers/search_rb.html","files/lib/picky/query/base_rb.html","files/lib/picky/query/full_rb.html","files/lib/picky/query/live_rb.html","files/lib/picky/query/solr_rb.html","files/lib/picky/rack/harakiri_rb.html","files/lib/picky/signals_rb.html","files/lib/picky/sources/base_rb.html","files/lib/picky/sources/couch_rb.html","files/lib/picky/sources/csv_rb.html","files/lib/picky/sources/db_rb.html","files/lib/picky/sources/delicious_rb.html","files/lib/picky/sources/wrappers/base_rb.html","files/lib/picky/sources/wrappers/location_rb.html","files/lib/tasks/application_rake.html","files/lib/tasks/framework_rake.html","files/lib/tasks/index_rake.html","files/lib/tasks/routes_rake.html","files/lib/tasks/server_rake.html","files/lib/tasks/shortcuts_rake.html","files/lib/tasks/solr_rake.html","files/lib/tasks/spec_rake.html","files/lib/tasks/statistics_rake.html","files/lib/tasks/try_rake.html"],"info":[["Application","lib/picky/application.rb","classes/Application.html"," < Object","= Picky Applications A Picky Application is where you configure the whole search engine. This is a step-by-step",1],["Helpers","lib/picky/internals/helpers/measuring.rb","classes/Helpers.html"," < ","Helper methods for measuring, benchmarking, logging. ",1],["Measuring","Helpers","classes/Helpers/Measuring.html"," < ","",1],["Index","lib/picky/index/base.rb","classes/Index.html"," < ","",1],["Base","Index","classes/Index/Base.html"," < Object","This class defines the indexing and index API that is exposed to the user as the #index method inside",1],["Memory","Index","classes/Index/Memory.html"," < Base","An index that is persisted in files, loaded at startup and kept in memory at runtime. ",1],["Redis","Index","classes/Index/Redis.html"," < Base","An index that is persisted in Redis. ",1],["Indexed","lib/picky/indexed/indexes.rb","classes/Indexed.html"," < ","",1],["Indexes","Indexed","classes/Indexed/Indexes.html"," < Object","Registers the indexes held at runtime, for queries. ",1],["Wrappers","Indexed","classes/Indexed/Wrappers.html"," < ","",1],["Bundle","Indexed::Wrappers","classes/Indexed/Wrappers/Bundle.html"," < ","Per Bundle wrappers. ",1],["Calculation","Indexed::Wrappers::Bundle","classes/Indexed/Wrappers/Bundle/Calculation.html"," < Wrapper","A calculation rewrites the symbol into a float. TODO I really need to allow integers as keys. The code",1],["Location","Indexed::Wrappers::Bundle","classes/Indexed/Wrappers/Bundle/Location.html"," < Calculation","A location calculation recalculates a location to the Picky internal location. ",1],["Wrapper","Indexed::Wrappers::Bundle","classes/Indexed/Wrappers/Bundle/Wrapper.html"," < Object","Base wrapper. Just delegates all methods to the bundle. ",1],["Serial","Indexers","classes/Indexers/Serial.html"," < Object","The indexer defines the control flow. ",1],["Indexing","lib/picky/indexing/indexes.rb","classes/Indexing.html"," < ","",1],["Indexes","Indexing","classes/Indexing/Indexes.html"," < Object","Registers the indexes held at index time, for indexing. ",1],["Interfaces","lib/picky/interfaces/live_parameters.rb","classes/Interfaces.html"," < ","This is very optional. Only load if the user wants it. ",1],["LiveParameters","Interfaces","classes/Interfaces/LiveParameters.html"," < Object","This is an interface that provides the user of Picky with the possibility to change parameters while",1],["CouldNotUpdateConfigurationError","Interfaces::LiveParameters","classes/Interfaces/LiveParameters/CouldNotUpdateConfigurationError.html"," < StandardError","",1],["Internals","lib/picky/internals/adapters/rack/base.rb","classes/Internals.html"," < ","encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 --- TODO Move to the API.",1],["Adapters","Internals","classes/Internals/Adapters.html"," < ","",1],["Rack","Internals::Adapters","classes/Internals/Adapters/Rack.html"," < ","Adapter that is plugged into a Rack outlet. --- --- This is an adapter that is plugged into a Rack outlet.",1],["Base","Internals::Adapters::Rack","classes/Internals/Adapters/Rack/Base.html"," < Object","Subclasses of this class should respond to * to_app(options) ",1],["LiveParameters","Internals::Adapters::Rack","classes/Internals/Adapters/Rack/LiveParameters.html"," < Base","",1],["Query","Internals::Adapters::Rack","classes/Internals/Adapters/Rack/Query.html"," < Base","",1],["FrontendAdapters","Internals","classes/Internals/FrontendAdapters.html"," < ","",1],["Index","Internals","classes/Internals/Index.html"," < ","",1],["Backend","Internals::Index","classes/Internals/Index/Backend.html"," < Object","",1],["File","Internals::Index","classes/Internals/Index/File.html"," < ","Handles all aspects of index files, such as dumping/loading. ",1],["Basic","Internals::Index::File","classes/Internals/Index/File/Basic.html"," < Object","Base class for all index files. Provides necessary helper methods for its subclasses. Not directly useable,",1],["JSON","Internals::Index::File","classes/Internals/Index/File/JSON.html"," < Basic","Index files dumped in the JSON format. ",1],["Marshal","Internals::Index::File","classes/Internals/Index/File/Marshal.html"," < Basic","Index data in the Ruby Marshal format. ",1],["Text","Internals::Index::File","classes/Internals/Index/File/Text.html"," < Basic","Index data dumped in the text format. ",1],["Files","Internals::Index","classes/Internals/Index/Files.html"," < Backend","",1],["Redis","Internals::Index","classes/Internals/Index/Redis.html"," < Backend","TODO Needs a reconnect to be run after forking. ",1],["Basic","Internals::Index::Redis","classes/Internals/Index/Redis/Basic.html"," < Object","Redis Backend Accessor. Provides necessary helper methods for its subclasses. Not directly useable, as",1],["ListHash","Internals::Index::Redis","classes/Internals/Index/Redis/ListHash.html"," < Basic","",1],["StringHash","Internals::Index::Redis","classes/Internals/Index/Redis/StringHash.html"," < Basic","",1],["Query","Internals","classes/Internals/Query.html"," < ","--- ",1],["Indexes","Internals::Query","classes/Internals/Query/Indexes.html"," < Object","The query indexes class bundles indexes given to a query. Example: # If you call Query::Full.new dvd_index,",1],["Full","Internals::Results","classes/Internals/Results/Full.html"," < Base","Full results are limited to maximally 20 results (by default). ",1],["Array","Performant","classes/Performant/Array.html"," < Object","#include \"ruby.h\"  // Copying internal ruby methods. // static inline VALUE rb_ary_elt(ary, offset) ",1],["Query","lib/picky/internals/query/weights.rb","classes/Query.html"," < ","= Picky Queries A Picky Query is an object which: * holds one or more indexes * offers an interface to",1],["Base","Query","classes/Query/Base.html"," < Object","The base query class. Not directly instantiated. However, its methods are used by its subclasses, Full",1],["DifferentTypesError","Query::Base","classes/Query/Base/DifferentTypesError.html"," < StandardError","Currently it isn't possible using Memory and Redis etc. indexes in the same query index group. ",1],["Full","Query","classes/Query/Full.html"," < Base","This Query class performs full queries. It includes in its results: * A count of results. * All possible",1],["Live","Query","classes/Query/Live.html"," < Base","This Query class performs live queries. It is useful for updating counters, or any job where you don't",1],["Harakiri","Rack","classes/Rack/Harakiri.html"," < Object","Simple Rack Middleware to kill Unicorns after X requests. Use as follows in e.g. your rackup File: Rack::Harakiri.after",1],["Sources","lib/picky/sources/couch.rb","classes/Sources.html"," < ","= Data Sources Currently, Picky offers the following Sources: * CSV (comma  or other  separated",1],["Base","Sources","classes/Sources/Base.html"," < Object","Sources are where your data comes from. A source has 1 mandatory and 2 optional methods: * connect_backend",1],["CSV","Sources","classes/Sources/CSV.html"," < Base","Describes a CSV source, a file with comma separated values in it. The first column is implicitly assumed",1],["Couch","Sources","classes/Sources/Couch.html"," < Base","A Couch database source. Options: * url and all the options of a <tt>RestClient::Resource</tt>. See http://github.com/archiloque/rest-client.",1],["DB","Sources","classes/Sources/DB.html"," < Base","Describes a database source. Needs a SELECT statement (with id in it), and a file option or the options",1],["Delicious","Sources","classes/Sources/Delicious.html"," < Base","Describes a Delicious (http://deli.cio.us) source. This source has a fixed set of categories: * title",1],["NoCSVFileGiven","Sources","classes/Sources/NoCSVFileGiven.html"," < StandardError","Raised when a CSV source is instantiated without a file. Example: Sources::CSV.new(:column1, :column2)",1],["NoCouchDBGiven","Sources","classes/Sources/NoCouchDBGiven.html"," < StandardError","Raised when a Couch source is instantiated without a file. Example: Sources::Couch.new(:column1, :column2)",1],["[]","Indexed::Indexes","classes/Indexed/Indexes.html#M000032","(identifier)","Extracts an index, given its identifier. ",2],["allocations_for","Internals::Query::Indexes","classes/Internals/Query/Indexes.html#M000137","(tokens)","Returns a number of possible allocations for the given tokens. ",2],["app_for","Internals::Adapters::Rack","classes/Internals/Adapters/Rack.html#M000057","(thing, options = {})","",2],["backup","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000077","()","Copies the indexes to the \"backup\" directory. ",2],["backup","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000082","()","Will copy the index file to a location that is in a directory named \"backup\" right under the directory",2],["backup","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000108","()","Redis does not backup. ",2],["backup_directory","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000083","()","The backup directory of this file. Equal to the file's dirname plus /backup ",2],["backup_file_path_of","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000086","(path)","The backup filename. ",2],["cache_ok?","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000089","()","Is the cache ok? (existing and larger than zero Bytes in size) A small cache is still ok. ",2],["cache_ok?","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000111","()","Is the cache ok? A small cache is still ok. ",2],["cache_small?","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000088","()","Is this cache file suspiciously small? (less than 8 Bytes of size) ",2],["cache_small?","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000110","()","Is this cache suspiciously small? ",2],["call","Application","classes/Application.html#M000003","(env)","A Picky application implements the Rack interface. Delegates to its routing to handle a request. ",2],["call","Rack::Harakiri","classes/Rack/Harakiri.html#M000158","(env)","#call interface method. Harakiri is a middleware, so it delegates the the app or the next middleware",2],["category","Index::Base","classes/Index/Base.html#M000014","(category_name, options = {})","Alias for #define_category",2],["check_external_interface","Application","classes/Application.html#M000010","()","",2],["clear","Indexed::Indexes","classes/Indexed/Indexes.html#M000029","()","Clears the indexes and the mapping. ",2],["clear","Indexing::Indexes","classes/Indexing/Indexes.html#M000021","()","Clears the array of indexes. ",2],["close_child","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000042","()","Close the child if it isn't yet closed. ",2],["collection","Internals::Index::Redis::ListHash","classes/Internals/Index/Redis/ListHash.html#M000114","(sym)","Get a collection. ",2],["collection","Internals::Index::Redis::StringHash","classes/Internals/Index/Redis/StringHash.html#M000117","(sym)","Get a collection. ",2],["combinations_type_for","Query::Base","classes/Query/Base.html#M000141","(index_definitions_ary)","",2],["connect_backend","Sources::Base","classes/Sources/Base.html#M000167","()","Connect to the backend. Called once per index/category combination before harvesting. Examples: * The",2],["connect_backend","Sources::DB","classes/Sources/DB.html#M000181","()","Connect the backend. Will raise unless connection options have been given. ",2],["default_indexing","Application","classes/Application.html#M000000","(options = {})","Returns a configured tokenizer that is used for indexing by default. ",2],["default_querying","Application","classes/Application.html#M000001","(options = {})","Returns a configured tokenizer that is used for querying by default. ",2],["define_category","Index::Base","classes/Index/Base.html#M000013","(category_name, options = {})","Defines a searchable category on the index. === Parameters * category_name: This identifier is used in",2],["define_ranged_category","Index::Base","classes/Index/Base.html#M000015","(category_name, range, options = {})","HIGHLY EXPERIMENTAL Try if you feel \"beta\" ;) Make this category range searchable with a fixed range.",2],["delete","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000079","()","Delete all index files. ",2],["delete","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000087","()","Deletes the file. ",2],["delete","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000109","()","Deletes the Redis index namespace. ",2],["dump","Internals::Index::File::JSON","classes/Internals/Index/File/JSON.html#M000093","(hash)","Dumps the index hash in json format. ",2],["dump","Internals::Index::File::Marshal","classes/Internals/Index/File/Marshal.html#M000097","(hash)","Dumps the index hash in marshal format. ",2],["dump","Internals::Index::File::Text","classes/Internals/Index/File/Text.html#M000101","(hash)","Text files are used exclusively for prepared data files.  ",2],["dump","Internals::Index::Redis::ListHash","classes/Internals/Index/Redis/ListHash.html#M000113","(hash)","Writes the hash into Redis. TODO Performance: rpush as you get the values instead of putting it together",2],["dump","Internals::Index::Redis::StringHash","classes/Internals/Index/Redis/StringHash.html#M000116","(hash)","Writes the hash into Redis. ",2],["dump_configuration","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000066","(configuration_hash)","",2],["dump_index","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000063","(index_hash)","Dumping. ",2],["dump_similarity","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000065","(similarity_hash)","",2],["dump_weights","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000064","(weights_hash)","",2],["empty_results","Query::Base","classes/Query/Base.html#M000148","(offset = 0)","Returns an empty result with default values. Parameters: * offset = 0: _optional_ The offset to use for",2],["execute","Query::Base","classes/Query/Base.html#M000147","(tokens, offset)","Execute a search using Query::Tokens. Note: Internal method, use #search_with_text. ",2],["expand_combinations_from","Internals::Query::Indexes","classes/Internals/Query/Indexes.html#M000138","(possible_combinations)","This is the core of the search engine. Gets an array of [ [<combinations for token1>], [<combinations",2],["extension","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000081","()","The default extension for index files is \"index\". ",2],["extension","Internals::Index::File::JSON","classes/Internals/Index/File/JSON.html#M000091","()","Uses the extension \"json\". ",2],["extension","Internals::Index::File::Marshal","classes/Internals/Index/File/Marshal.html#M000095","()","Uses the extension \"dump\". ",2],["extension","Internals::Index::File::Text","classes/Internals/Index/File/Text.html#M000099","()","Uses the extension \"txt\". ",2],["extract_configuration","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000045","()","",2],["extracted","Internals::Adapters::Rack::Query","classes/Internals/Adapters/Rack/Query.html#M000058","(params)","",2],["find","Indexing::Indexes","classes/Indexing/Indexes.html#M000027","(index_name, category_name)","Find a given index:category pair. ",2],["generate_cache_only","Indexing::Indexes","classes/Indexing/Indexes.html#M000026","(index_name, category_name = nil)","Generate only the cache for the given index:category pair. ",2],["generate_index_only","Indexing::Indexes","classes/Indexing/Indexes.html#M000025","(index_name, category_name = nil)","Generate only the index for the given index:category pair. ",2],["harakiri","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000040","()","Kills itself, but still answering the request honorably. ",2],["harakiri","Rack::Harakiri","classes/Rack/Harakiri.html#M000159","()","Checks to see if it is time to honorably retire. If yes, kills itself (Unicorn will answer the request,",2],["harakiri?","Rack::Harakiri","classes/Rack/Harakiri.html#M000160","()","Is it time to honorably retire? ",2],["harvest","Sources::Base","classes/Sources/Base.html#M000168","(index, category)","Called by the indexer when gathering data. Yields the data (id, text for id) for the given type and category.",2],["harvest","Sources::CSV","classes/Sources/CSV.html#M000172","(_, category)","Harvests the data to index. ",2],["harvest","Sources::Couch","classes/Sources/Couch.html#M000164","(type, category)","",2],["harvest","Sources::DB","classes/Sources/DB.html#M000185","(type, category, &block)","Harvests the data to index in chunks. ",2],["harvest","Sources::Delicious","classes/Sources/Delicious.html#M000176","(_, category)","Harvests the data to index. ",2],["ids","Indexed::Wrappers::Bundle::Calculation","classes/Indexed/Wrappers/Bundle/Calculation.html#M000124","(sym)","",2],["ids","Internals::Index::Redis","classes/Internals/Index/Redis.html#M000120","(sym)","Delegate to the right collection. ",2],["index","Application","classes/Application.html#M000002","(name, source, options = {})","Create a new index for indexing and for querying. Parameters: * name: The identifier of the index. Used:",2],["index","Indexers::Serial","classes/Indexers/Serial.html#M000133","()","Selects the original id (indexed id) and a column to process. The column data is called \"token\". Note:",2],["index","Indexing::Indexes","classes/Indexing/Indexes.html#M000023","(randomly = true)","Runs the indexers in parallel (index + cache). TODO Spec. ",2],["index_cache_ok?","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000071","()","Cache ok? ",2],["index_cache_small?","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000074","()","Cache small? ",2],["index_for_tests","Indexing::Indexes","classes/Indexing/Indexes.html#M000024","()","For integration testing  indexes for the tests without forking and shouting ;) ",2],["indexing_message","Indexers::Serial","classes/Indexers/Serial.html#M000135","()","",2],["key_format","Indexers::Serial","classes/Indexers/Serial.html#M000132","()","Delegates the key format to the source. Default is to_i. ",2],["key_format","Sources::Couch","classes/Sources/Couch.html#M000162","()","Default key format method for couch DB is to_sym.  ",2],["kill_each_worker_except","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000036","(pid)","Taken from Unicorn. ",2],["kill_worker","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000037","(signal, wpid)","",2],["load","Indexed::Wrappers::Bundle::Location","classes/Indexed/Wrappers/Bundle/Location.html#M000128","()","",2],["load","Internals::Index::File::JSON","classes/Internals/Index/File/JSON.html#M000092","()","Loads the index hash from json format. ",2],["load","Internals::Index::File::Marshal","classes/Internals/Index/File/Marshal.html#M000096","()","Loads the index hash from marshal format. ",2],["load","Internals::Index::File::Text","classes/Internals/Index/File/Text.html#M000100","()","Text files are used exclusively for prepared data files. ",2],["load","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000106","()","Does nothing. ",2],["load_configuration","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000070","()","",2],["load_index","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000067","()","Loading. ",2],["load_similarity","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000068","()","",2],["load_weights","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000069","()","",2],["member","Internals::Index::Redis::ListHash","classes/Internals/Index/Redis/ListHash.html#M000115","(sym)","Get a single value. ",2],["member","Internals::Index::Redis::StringHash","classes/Internals/Index/Redis/StringHash.html#M000118","(sym)","Get a single value. ",2],["new","Index::Base","classes/Index/Base.html#M000012","(name, source, options = {})","Create a new index with a given source. === Parameters * name: A name that will be used for the index",2],["new","Index::Memory","classes/Index/Memory.html#M000017","(name, source, options = {})","Create a new memory index for indexing and for querying. Parameters: * name: The identifier of the index.",2],["new","Index::Redis","classes/Index/Redis.html#M000019","(name, source, options = {})","Create a new Redis index for indexing and for querying. Parameters: * name: The identifier of the index.",2],["new","Indexed::Indexes","classes/Indexed/Indexes.html#M000028","()","",2],["new","Indexed::Wrappers::Bundle::Location","classes/Indexed/Wrappers/Bundle/Location.html#M000126","(bundle, options = {})","",2],["new","Indexed::Wrappers::Bundle::Wrapper","classes/Indexed/Wrappers/Bundle/Wrapper.html#M000129","(bundle)","",2],["new","Indexers::Serial","classes/Indexers/Serial.html#M000130","(configuration, source, tokenizer)","",2],["new","Indexing::Indexes","classes/Indexing/Indexes.html#M000020","()","",2],["new","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000033","()","",2],["new","Interfaces::LiveParameters::CouldNotUpdateConfigurationError","classes/Interfaces/LiveParameters/CouldNotUpdateConfigurationError.html#M000043","(config_key, message)","",2],["new","Internals::Adapters::Rack::LiveParameters","classes/Internals/Adapters/Rack/LiveParameters.html#M000053","(live_parameters)","",2],["new","Internals::Adapters::Rack::Query","classes/Internals/Adapters/Rack/Query.html#M000055","(query)","",2],["new","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000061","(bundle_name, config)","",2],["new","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000080","(cache_path)","An index cache takes a path, without file extension, which will be provided by the subclasses. ",2],["new","Internals::Index::Files","classes/Internals/Index/Files.html#M000104","(bundle_name, config)","",2],["new","Internals::Index::Redis","classes/Internals/Index/Redis.html#M000119","(bundle_name, config)","",2],["new","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000105","(namespace)","An index cache takes a path, without file extension, which will be provided by the subclasses. ",2],["new","Internals::Query::Indexes","classes/Internals/Query/Indexes.html#M000136","(*index_definitions, combinations_type)","Creates a new Query::Indexes. Its job is to generate all possible combinations, but also checking whether",2],["new","Query::Base","classes/Query/Base.html#M000140","(*index_definitions)","Takes: * A number of indexes * Options hash (optional) with: * tokenizer: Tokenizers::Query.default by",2],["new","Query::Base::DifferentTypesError","classes/Query/Base/DifferentTypesError.html#M000142","(types)","",2],["new","Rack::Harakiri","classes/Rack/Harakiri.html#M000157","(app)","",2],["new","Sources::CSV","classes/Sources/CSV.html#M000170","(*category_names, options)","",2],["new","Sources::Couch","classes/Sources/Couch.html#M000161","(*category_names, options)","",2],["new","Sources::DB","classes/Sources/DB.html#M000178","(select_statement, options = { file: 'app/db.yml' })","",2],["new","Sources::Delicious","classes/Sources/Delicious.html#M000174","(username, password)","",2],["open_for_indexing","Internals::Index::File::Text","classes/Internals/Index/File/Text.html#M000103","(&block)","",2],["parameters","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000039","(configuration_hash)","Updates any parameters with the ones given and returns the updated params. The params are a strictly",2],["prepare_backup","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000084","(target)","Prepares the backup directory for the file. ",2],["process","Indexers::Serial","classes/Indexers/Serial.html#M000134","()","",2],["querying_removes_characters","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000046","()","TODO Move to Interface object. ",2],["querying_removes_characters=","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000047","(new_value)","",2],["querying_splits_text_on","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000050","()","",2],["querying_splits_text_on=","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000051","(new_value)","",2],["querying_stopwords","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000048","()","",2],["querying_stopwords=","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000049","(new_value)","",2],["raise_different","Query::Base","classes/Query/Base.html#M000144","(index_types)","",2],["raise_no_source","Indexers::Serial","classes/Indexers/Serial.html#M000131","()","Raise a no source exception. ",2],["ranged_category","Index::Base","classes/Index/Base.html#M000016","(category_name, range, options = {})","Alias for #define_ranged_category",2],["recalculate","Indexed::Wrappers::Bundle::Calculation","classes/Indexed/Wrappers/Bundle/Calculation.html#M000123","(float)","",2],["recalculate","Indexed::Wrappers::Bundle::Location","classes/Indexed/Wrappers/Bundle/Location.html#M000127","(float)","",2],["register","Indexed::Indexes","classes/Indexed/Indexes.html#M000031","(index)","Registers an index with the indexes. ",2],["register","Indexing::Indexes","classes/Indexing/Indexes.html#M000022","(index)","Registers an index with the indexes. ",2],["reload","Indexed::Indexes","classes/Indexed/Indexes.html#M000030","()","Reloads all indexes, one after another, in the order they were added. ",2],["remove_worker","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000038","(wpid)","TODO This needs to be Webserver agnostic. ",2],["respond_with","Internals::Adapters::Rack::Base","classes/Internals/Adapters/Rack/Base.html#M000052","(response, content_type = 'application/json')","Puts together an appropriately structured Rack response. Note: Bytesize is needed to have special characters",2],["restore","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000078","()","Restores the indexes from the \"backup\" directory. ",2],["restore","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000085","()","Copies the file from its backup location back to the original location. ",2],["result_type","Query::Full","classes/Query/Full.html#M000154","()","Returns Results::Full as its result type. ",2],["result_type","Query::Live","classes/Query/Live.html#M000156","()","Returns Results::Live as its result type. ",2],["retrieve","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000062","(&block)","Retrieving data. ",2],["retrieve","Internals::Index::File::JSON","classes/Internals/Index/File/JSON.html#M000094","()","A json file does not provide retrieve functionality. ",2],["retrieve","Internals::Index::File::Marshal","classes/Internals/Index/File/Marshal.html#M000098","()","A marshal file does not provide retrieve functionality. ",2],["retrieve","Internals::Index::File::Text","classes/Internals/Index/File/Text.html#M000102","()","Retrieves prepared index data in the form * id,data\\n * id,data\\n * id,data\\n Yields an id string and",2],["retrieve","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000107","()","We do not use Redis to retrieve data. ",2],["search","Query::Base","classes/Query/Base.html#M000146","(tokens, offset = 0)","Runs the actual search using Query::Tokens. Note: Internal method, use #search_with_text. ",2],["search_with_text","Query::Base","classes/Query/Base.html#M000145","(text, offset = 0)","This is the main entry point for a query. Use this in specs and also for running queries. Parameters:",2],["setting","Internals::Index::Redis","classes/Internals/Index/Redis.html#M000122","(sym)","Delegate to a member value. ",2],["similarity_cache_ok?","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000072","()","",2],["similarity_cache_small?","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000075","()","",2],["size_of","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000090","(path)","Extracts the size of the file in Bytes. ",2],["size_of","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000112","(path)","Extracts the size of the file in Bytes. ",2],["start_master_process_thread","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000034","()","This runs a thread that listens to child processes. ",2],["take_snapshot","Sources::Base","classes/Sources/Base.html#M000169","(index)","Used to take a snapshot of your data if it is fast changing. Called once for each type before harvesting.",2],["take_snapshot","Sources::DB","classes/Sources/DB.html#M000182","(type)","Take a snapshot of the data. Uses CREATE TABLE AS with the given SELECT statement to create a snapshot",2],["timed","Helpers::Measuring","classes/Helpers/Measuring.html#M000060","(*args, &block)","Returns a duration in seconds. ",2],["to_app","Internals::Adapters::Rack::LiveParameters","classes/Internals/Adapters/Rack/LiveParameters.html#M000054","(options = {})","",2],["to_app","Internals::Adapters::Rack::Query","classes/Internals/Adapters/Rack/Query.html#M000056","(options = {})","",2],["to_log","Internals::Results::Full","classes/Internals/Results/Full.html#M000139","(*args)","",2],["to_s","Query::Base","classes/Query/Base.html#M000155","()","Display some nice information for the user. ",2],["to_s","Query::Base::DifferentTypesError","classes/Query/Base/DifferentTypesError.html#M000143","()","",2],["tokenized","Query::Base","classes/Query/Base.html#M000149","(text)","Delegates the tokenizing to the query tokenizer. Parameters: * text: The text to tokenize. ",2],["try_updating_configuration_with","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000044","(configuration_hash)","Tries updating the configuration in the child process or parent process. ",2],["weight","Indexed::Wrappers::Bundle::Calculation","classes/Indexed/Wrappers/Bundle/Calculation.html#M000125","(sym)","",2],["weight","Internals::Index::Redis","classes/Internals/Index/Redis.html#M000121","(sym)","Delegate to the right member value. Note: Converts to float. ",2],["weights_cache_ok?","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000073","()","",2],["weights_cache_small?","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000076","()","",2],["worker_pids","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000035","()","TODO This needs to be webserver agnostic. ",2],["write_parent","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000041","(configuration_hash)","Write the parent. Note: The ;;; is the end marker for the message. ",2],["bundling.rb","files/lib/bundling_rb.html","files/lib/bundling_rb.html","","",3],["constants.rb","files/lib/constants_rb.html","files/lib/constants_rb.html","","Set constants. ",3],["deployment.rb","files/lib/deployment_rb.html","files/lib/deployment_rb.html","","",3],["picky-tasks.rb","files/lib/picky-tasks_rb.html","files/lib/picky-tasks_rb.html","","",3],["picky.rb","files/lib/picky_rb.html","files/lib/picky_rb.html","","Require the constants. ",3],["aliases.rb","files/lib/picky/aliases_rb.html","files/lib/picky/aliases_rb.html","","This provides a nice accessor for users who want to use the index API. ",3],["application.rb","files/lib/picky/application_rb.html","files/lib/picky/application_rb.html","","= Picky Applications A Picky Application is where you configure the whole search engine. This is a step-by-step",3],["west_european.rb","files/lib/picky/character_substituters/west_european_rb.html","files/lib/picky/character_substituters/west_european_rb.html","","encoding: utf-8 ",3],["cli.rb","files/lib/picky/cli_rb.html","files/lib/picky/cli_rb.html","","",3],["cores.rb","files/lib/picky/cores_rb.html","files/lib/picky/cores_rb.html","","",3],["aliases.rb","files/lib/picky/generators/aliases_rb.html","files/lib/picky/generators/aliases_rb.html","","",3],["base.rb","files/lib/picky/index/base_rb.html","files/lib/picky/index/base_rb.html","","",3],["memory.rb","files/lib/picky/index/memory_rb.html","files/lib/picky/index/memory_rb.html","","",3],["redis.rb","files/lib/picky/index/redis_rb.html","files/lib/picky/index/redis_rb.html","","",3],["index_bundle.rb","files/lib/picky/index_bundle_rb.html","files/lib/picky/index_bundle_rb.html","","Comfortable API convenience class, splits methods to indexes. ",3],["indexes.rb","files/lib/picky/indexed/indexes_rb.html","files/lib/picky/indexed/indexes_rb.html","","",3],["indexes.rb","files/lib/picky/indexing/indexes_rb.html","files/lib/picky/indexing/indexes_rb.html","","",3],["live_parameters.rb","files/lib/picky/interfaces/live_parameters_rb.html","files/lib/picky/interfaces/live_parameters_rb.html","","This is very optional. Only load if the user wants it. ",3],["rack.rb","files/lib/picky/internals/adapters/rack_rb.html","files/lib/picky/internals/adapters/rack_rb.html","","",3],["base.rb","files/lib/picky/internals/adapters/rack/base_rb.html","files/lib/picky/internals/adapters/rack/base_rb.html","","",3],["live_parameters.rb","files/lib/picky/internals/adapters/rack/live_parameters_rb.html","files/lib/picky/internals/adapters/rack/live_parameters_rb.html","","",3],["query.rb","files/lib/picky/internals/adapters/rack/query_rb.html","files/lib/picky/internals/adapters/rack/query_rb.html","","",3],["location.rb","files/lib/picky/internals/calculations/location_rb.html","files/lib/picky/internals/calculations/location_rb.html","","",3],["index.rb","files/lib/picky/internals/configuration/index_rb.html","files/lib/picky/internals/configuration/index_rb.html","","",3],["maybe_compile.rb","files/lib/picky/internals/ext/maybe_compile_rb.html","files/lib/picky/internals/ext/maybe_compile_rb.html","","",3],["Makefile","files/lib/picky/internals/ext/ruby19/Makefile.html","files/lib/picky/internals/ext/ruby19/Makefile.html",""," SHELL = /bin/sh  #### Start of system configuration section. ####  srcdir = . topdir = /Users/admin/.rvm/rubies/ruby-1.9.2-p0/include/ruby-1.9.1",3],["extconf.rb","files/lib/picky/internals/ext/ruby19/extconf_rb.html","files/lib/picky/internals/ext/ruby19/extconf_rb.html","","",3],["mkmf.log","files/lib/picky/internals/ext/ruby19/mkmf_log.html","files/lib/picky/internals/ext/ruby19/mkmf_log.html","","have_header: checking for ruby.h... -------------------- yes  \"gcc -o conftest -I/Users/admin/.rvm/rubies/ruby-1.9.2-p0/include/ruby-1.9.1/x86_64-darwin10.4.0",3],["performant.c","files/lib/picky/internals/ext/ruby19/performant_c.html","files/lib/picky/internals/ext/ruby19/performant_c.html","","",3],["array.rb","files/lib/picky/internals/extensions/array_rb.html","files/lib/picky/internals/extensions/array_rb.html","","The Array class we all know and love. ",3],["hash.rb","files/lib/picky/internals/extensions/hash_rb.html","files/lib/picky/internals/extensions/hash_rb.html","","Extensions for the Hash. ",3],["module.rb","files/lib/picky/internals/extensions/module_rb.html","files/lib/picky/internals/extensions/module_rb.html","","The original Module class. ",3],["object.rb","files/lib/picky/internals/extensions/object_rb.html","files/lib/picky/internals/extensions/object_rb.html","","",3],["symbol.rb","files/lib/picky/internals/extensions/symbol_rb.html","files/lib/picky/internals/extensions/symbol_rb.html","","Extending the Symbol class. ",3],["rack.rb","files/lib/picky/internals/frontend_adapters/rack_rb.html","files/lib/picky/internals/frontend_adapters/rack_rb.html","","",3],["base.rb","files/lib/picky/internals/generators/base_rb.html","files/lib/picky/internals/generators/base_rb.html","","",3],["default.rb","files/lib/picky/internals/generators/partial/default_rb.html","files/lib/picky/internals/generators/partial/default_rb.html","","",3],["none.rb","files/lib/picky/internals/generators/partial/none_rb.html","files/lib/picky/internals/generators/partial/none_rb.html","","",3],["strategy.rb","files/lib/picky/internals/generators/partial/strategy_rb.html","files/lib/picky/internals/generators/partial/strategy_rb.html","","",3],["substring.rb","files/lib/picky/internals/generators/partial/substring_rb.html","files/lib/picky/internals/generators/partial/substring_rb.html","","",3],["partial_generator.rb","files/lib/picky/internals/generators/partial_generator_rb.html","files/lib/picky/internals/generators/partial_generator_rb.html","","",3],["default.rb","files/lib/picky/internals/generators/similarity/default_rb.html","files/lib/picky/internals/generators/similarity/default_rb.html","","",3],["double_levenshtone.rb","files/lib/picky/internals/generators/similarity/double_levenshtone_rb.html","files/lib/picky/internals/generators/similarity/double_levenshtone_rb.html","","encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 --- TODO Move to the API.",3],["none.rb","files/lib/picky/internals/generators/similarity/none_rb.html","files/lib/picky/internals/generators/similarity/none_rb.html","","",3],["strategy.rb","files/lib/picky/internals/generators/similarity/strategy_rb.html","files/lib/picky/internals/generators/similarity/strategy_rb.html","","",3],["similarity_generator.rb","files/lib/picky/internals/generators/similarity_generator_rb.html","files/lib/picky/internals/generators/similarity_generator_rb.html","","",3],["strategy.rb","files/lib/picky/internals/generators/strategy_rb.html","files/lib/picky/internals/generators/strategy_rb.html","","",3],["default.rb","files/lib/picky/internals/generators/weights/default_rb.html","files/lib/picky/internals/generators/weights/default_rb.html","","",3],["logarithmic.rb","files/lib/picky/internals/generators/weights/logarithmic_rb.html","files/lib/picky/internals/generators/weights/logarithmic_rb.html","","",3],["strategy.rb","files/lib/picky/internals/generators/weights/strategy_rb.html","files/lib/picky/internals/generators/weights/strategy_rb.html","","",3],["weights_generator.rb","files/lib/picky/internals/generators/weights_generator_rb.html","files/lib/picky/internals/generators/weights_generator_rb.html","","",3],["measuring.rb","files/lib/picky/internals/helpers/measuring_rb.html","files/lib/picky/internals/helpers/measuring_rb.html","","Helper methods for measuring, benchmarking, logging. ",3],["backend.rb","files/lib/picky/internals/index/backend_rb.html","files/lib/picky/internals/index/backend_rb.html","","",3],["basic.rb","files/lib/picky/internals/index/file/basic_rb.html","files/lib/picky/internals/index/file/basic_rb.html","","",3],["json.rb","files/lib/picky/internals/index/file/json_rb.html","files/lib/picky/internals/index/file/json_rb.html","","",3],["marshal.rb","files/lib/picky/internals/index/file/marshal_rb.html","files/lib/picky/internals/index/file/marshal_rb.html","","",3],["text.rb","files/lib/picky/internals/index/file/text_rb.html","files/lib/picky/internals/index/file/text_rb.html","","",3],["files.rb","files/lib/picky/internals/index/files_rb.html","files/lib/picky/internals/index/files_rb.html","","",3],["redis.rb","files/lib/picky/internals/index/redis_rb.html","files/lib/picky/internals/index/redis_rb.html","","",3],["basic.rb","files/lib/picky/internals/index/redis/basic_rb.html","files/lib/picky/internals/index/redis/basic_rb.html","","",3],["list_hash.rb","files/lib/picky/internals/index/redis/list_hash_rb.html","files/lib/picky/internals/index/redis/list_hash_rb.html","","",3],["string_hash.rb","files/lib/picky/internals/index/redis/string_hash_rb.html","files/lib/picky/internals/index/redis/string_hash_rb.html","","",3],["base.rb","files/lib/picky/internals/indexed/bundle/base_rb.html","files/lib/picky/internals/indexed/bundle/base_rb.html","","",3],["memory.rb","files/lib/picky/internals/indexed/bundle/memory_rb.html","files/lib/picky/internals/indexed/bundle/memory_rb.html","","",3],["redis.rb","files/lib/picky/internals/indexed/bundle/redis_rb.html","files/lib/picky/internals/indexed/bundle/redis_rb.html","","",3],["categories.rb","files/lib/picky/internals/indexed/categories_rb.html","files/lib/picky/internals/indexed/categories_rb.html","","",3],["category.rb","files/lib/picky/internals/indexed/category_rb.html","files/lib/picky/internals/indexed/category_rb.html","","",3],["index.rb","files/lib/picky/internals/indexed/index_rb.html","files/lib/picky/internals/indexed/index_rb.html","","",3],["calculation.rb","files/lib/picky/internals/indexed/wrappers/bundle/calculation_rb.html","files/lib/picky/internals/indexed/wrappers/bundle/calculation_rb.html","","",3],["location.rb","files/lib/picky/internals/indexed/wrappers/bundle/location_rb.html","files/lib/picky/internals/indexed/wrappers/bundle/location_rb.html","","",3],["wrapper.rb","files/lib/picky/internals/indexed/wrappers/bundle/wrapper_rb.html","files/lib/picky/internals/indexed/wrappers/bundle/wrapper_rb.html","","",3],["exact_first.rb","files/lib/picky/internals/indexed/wrappers/exact_first_rb.html","files/lib/picky/internals/indexed/wrappers/exact_first_rb.html","","",3],["no_source_specified_error.rb","files/lib/picky/internals/indexers/no_source_specified_error_rb.html","files/lib/picky/internals/indexers/no_source_specified_error_rb.html","","",3],["serial.rb","files/lib/picky/internals/indexers/serial_rb.html","files/lib/picky/internals/indexers/serial_rb.html","","encoding: utf-8 ",3],["solr.rb","files/lib/picky/internals/indexers/solr_rb.html","files/lib/picky/internals/indexers/solr_rb.html","","encoding: utf-8 ",3],["base.rb","files/lib/picky/internals/indexing/bundle/base_rb.html","files/lib/picky/internals/indexing/bundle/base_rb.html","","encoding: utf-8 ",3],["memory.rb","files/lib/picky/internals/indexing/bundle/memory_rb.html","files/lib/picky/internals/indexing/bundle/memory_rb.html","","encoding: utf-8 ",3],["redis.rb","files/lib/picky/internals/indexing/bundle/redis_rb.html","files/lib/picky/internals/indexing/bundle/redis_rb.html","","encoding: utf-8 ",3],["super_base.rb","files/lib/picky/internals/indexing/bundle/super_base_rb.html","files/lib/picky/internals/indexing/bundle/super_base_rb.html","","",3],["categories.rb","files/lib/picky/internals/indexing/categories_rb.html","files/lib/picky/internals/indexing/categories_rb.html","","",3],["category.rb","files/lib/picky/internals/indexing/category_rb.html","files/lib/picky/internals/indexing/category_rb.html","","",3],["index.rb","files/lib/picky/internals/indexing/index_rb.html","files/lib/picky/internals/indexing/index_rb.html","","TODO Move to the API. ",3],["performant.rb","files/lib/picky/internals/performant_rb.html","files/lib/picky/internals/performant_rb.html","","",3],["allocation.rb","files/lib/picky/internals/query/allocation_rb.html","files/lib/picky/internals/query/allocation_rb.html","","",3],["allocations.rb","files/lib/picky/internals/query/allocations_rb.html","files/lib/picky/internals/query/allocations_rb.html","","",3],["combination.rb","files/lib/picky/internals/query/combination_rb.html","files/lib/picky/internals/query/combination_rb.html","","",3],["base.rb","files/lib/picky/internals/query/combinations/base_rb.html","files/lib/picky/internals/query/combinations/base_rb.html","","",3],["memory.rb","files/lib/picky/internals/query/combinations/memory_rb.html","files/lib/picky/internals/query/combinations/memory_rb.html","","",3],["redis.rb","files/lib/picky/internals/query/combinations/redis_rb.html","files/lib/picky/internals/query/combinations/redis_rb.html","","",3],["indexes.rb","files/lib/picky/internals/query/indexes_rb.html","files/lib/picky/internals/query/indexes_rb.html","","",3],["qualifiers.rb","files/lib/picky/internals/query/qualifiers_rb.html","files/lib/picky/internals/query/qualifiers_rb.html","","coding: utf-8 ",3],["token.rb","files/lib/picky/internals/query/token_rb.html","files/lib/picky/internals/query/token_rb.html","","",3],["tokens.rb","files/lib/picky/internals/query/tokens_rb.html","files/lib/picky/internals/query/tokens_rb.html","","encoding: utf-8 ",3],["weights.rb","files/lib/picky/internals/query/weights_rb.html","files/lib/picky/internals/query/weights_rb.html","","",3],["base.rb","files/lib/picky/internals/results/base_rb.html","files/lib/picky/internals/results/base_rb.html","","",3],["full.rb","files/lib/picky/internals/results/full_rb.html","files/lib/picky/internals/results/full_rb.html","","",3],["live.rb","files/lib/picky/internals/results/live_rb.html","files/lib/picky/internals/results/live_rb.html","","",3],["sunspot-solr.pid","files/lib/picky/internals/solr/pids/sunspot-solr_pid.html","files/lib/picky/internals/solr/pids/sunspot-solr_pid.html","","26985",3],["schema_generator.rb","files/lib/picky/internals/solr/schema_generator_rb.html","files/lib/picky/internals/solr/schema_generator_rb.html","","",3],["base.rb","files/lib/picky/internals/tokenizers/base_rb.html","files/lib/picky/internals/tokenizers/base_rb.html","","",3],["index.rb","files/lib/picky/internals/tokenizers/index_rb.html","files/lib/picky/internals/tokenizers/index_rb.html","","",3],["query.rb","files/lib/picky/internals/tokenizers/query_rb.html","files/lib/picky/internals/tokenizers/query_rb.html","","encoding: utf-8 ",3],["loader.rb","files/lib/picky/loader_rb.html","files/lib/picky/loader_rb.html","","Loads the search engine and itself. ",3],["search.rb","files/lib/picky/loggers/search_rb.html","files/lib/picky/loggers/search_rb.html","","encoding: utf-8 ",3],["base.rb","files/lib/picky/query/base_rb.html","files/lib/picky/query/base_rb.html","","= Picky Queries A Picky Query is an object which: * holds one or more indexes * offers an interface to",3],["full.rb","files/lib/picky/query/full_rb.html","files/lib/picky/query/full_rb.html","","",3],["live.rb","files/lib/picky/query/live_rb.html","files/lib/picky/query/live_rb.html","","",3],["solr.rb","files/lib/picky/query/solr_rb.html","files/lib/picky/query/solr_rb.html","","",3],["harakiri.rb","files/lib/picky/rack/harakiri_rb.html","files/lib/picky/rack/harakiri_rb.html","","",3],["signals.rb","files/lib/picky/signals_rb.html","files/lib/picky/signals_rb.html","","TODO Cleanup and move to project_prototype. Signal.trap 'USR1' do Indexes.reload end Signal.trap 'USR2'",3],["base.rb","files/lib/picky/sources/base_rb.html","files/lib/picky/sources/base_rb.html","","= Data Sources Currently, Picky offers the following Sources: * CSV (comma  or other  separated",3],["couch.rb","files/lib/picky/sources/couch_rb.html","files/lib/picky/sources/couch_rb.html","","",3],["csv.rb","files/lib/picky/sources/csv_rb.html","files/lib/picky/sources/csv_rb.html","","",3],["db.rb","files/lib/picky/sources/db_rb.html","files/lib/picky/sources/db_rb.html","","",3],["delicious.rb","files/lib/picky/sources/delicious_rb.html","files/lib/picky/sources/delicious_rb.html","","",3],["base.rb","files/lib/picky/sources/wrappers/base_rb.html","files/lib/picky/sources/wrappers/base_rb.html","","",3],["location.rb","files/lib/picky/sources/wrappers/location_rb.html","files/lib/picky/sources/wrappers/location_rb.html","","",3],["application.rake","files/lib/tasks/application_rake.html","files/lib/tasks/application_rake.html","","# desc \"Loads the application, including its configuration.\" task :application => :framework do   Loader.load_application",3],["framework.rake","files/lib/tasks/framework_rake.html","files/lib/tasks/framework_rake.html","","# desc \"Loads the framework.\" task :framework do   require File.expand_path '../../picky', __FILE__ end",3],["index.rake","files/lib/tasks/index_rake.html","files/lib/tasks/index_rake.html","","# Global. # namespace :index do      desc \"Takes a snapshot, indexes, and caches in random order.\"  ",3],["routes.rake","files/lib/tasks/routes_rake.html","files/lib/tasks/routes_rake.html","","desc \"Shows the available URL paths\" task :routes => :application do   puts \"Note: Anchored (\\u2713)",3],["server.rake","files/lib/tasks/server_rake.html","files/lib/tasks/server_rake.html","","# TODO This file needs some love. # namespace :server do      def chdir_to_root     Dir.chdir PICKY_ROOT",3],["shortcuts.rake","files/lib/tasks/shortcuts_rake.html","files/lib/tasks/shortcuts_rake.html","","desc \"Generate the index (random order).\" task :index => :application do   Rake::Task[:'index:randomly'].invoke",3],["solr.rake","files/lib/tasks/solr_rake.html","files/lib/tasks/solr_rake.html","","# sunspot-solr start --solr-home=solr --data-directory=index/development/solr --pid-dir=solr/pids --log-file=log/solr.log",3],["spec.rake","files/lib/tasks/spec_rake.html","files/lib/tasks/spec_rake.html","","require 'spec' require 'spec/rake/spectask'  task :default => :spec  desc \"Run all specs\" Spec::Rake::SpecTask.new(:spec)",3],["statistics.rake","files/lib/tasks/statistics_rake.html","files/lib/tasks/statistics_rake.html","","namespace :statistics do    # desc \"start the server\"   # task :start => :application do   #   Statistics.start",3],["try.rake","files/lib/tasks/try_rake.html","files/lib/tasks/try_rake.html","","# Tasks for manually testing your engine configuration. # namespace :try do      # desc \"Try how a given",3]]}}