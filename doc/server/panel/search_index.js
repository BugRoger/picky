var search_data = {"index":{"searchIndex":["adapters","rack","base","liveparameters","query","application","frontendadapters","helpers","measuring","backend","indexapi","interfaces","liveparameters","couldnotupdateconfigurationerror","array","query","base","full","live","harakiri","sources","base","csv","couch","db","delicious","nocsvfilegiven","nocouchdbgiven","app_for()","backup()","call()","call()","category()","check_external_interface()","close_child()","connect_backend()","connect_backend()","default_indexing()","default_querying()","define_category()","define_ranged_category()","delete()","dump_configuration()","dump_index()","dump_similarity()","dump_weights()","empty_results()","execute()","extract_configuration()","extracted()","harakiri()","harakiri()","harakiri?()","harvest()","harvest()","harvest()","harvest()","harvest()","index()","index_cache_ok?()","index_cache_small?()","key_format()","kill_each_worker_except()","kill_worker()","load_configuration()","load_index()","load_similarity()","load_weights()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","parameters()","querying_removes_characters()","querying_removes_characters=()","querying_splits_text_on()","querying_splits_text_on=()","querying_stopwords()","querying_stopwords=()","ranged_category()","remove_worker()","respond_with()","restore()","result_type()","result_type()","retrieve()","search()","search_with_text()","similarity_cache_ok?()","similarity_cache_small?()","start_master_process_thread()","take_snapshot()","take_snapshot()","timed()","to_app()","to_app()","to_s()","tokenized()","try_updating_configuration_with()","weights_cache_ok?()","weights_cache_small?()","worker_pids()","write_parent()","bundling.rb","constants.rb","deployment.rb","picky-tasks.rb","picky.rb","rack.rb","base.rb","live_parameters.rb","query.rb","alias_instances.rb","application.rb","convenience.rb","generator.rb","default.rb","none.rb","strategy.rb","substring.rb","partial_generator.rb","default.rb","double_levenshtone.rb","none.rb","strategy.rb","similarity_generator.rb","strategy.rb","default.rb","logarithmic.rb","strategy.rb","weights_generator.rb","location.rb","west_european.rb","cli.rb","index.rb","cores.rb","maybe_compile.rb","makefile","extconf.rb","mkmf.log","performant.c","array.rb","hash.rb","module.rb","object.rb","symbol.rb","rack.rb","measuring.rb","backend.rb","bundle.rb","basic.rb","json.rb","marshal.rb","text.rb","files.rb","redis.rb","basic.rb","list_hash.rb","string_hash.rb","index_api.rb","base.rb","memory.rb","redis.rb","categories.rb","category.rb","index.rb","indexes.rb","calculation.rb","location.rb","wrapper.rb","exact_first.rb","no_source_specified_error.rb","serial.rb","solr.rb","indexes_api.rb","base.rb","memory.rb","redis.rb","super_base.rb","categories.rb","category.rb","index.rb","indexes.rb","live_parameters.rb","loader.rb","search.rb","performant.rb","allocation.rb","allocations.rb","base.rb","combination.rb","combinations.rb","full.rb","live.rb","qualifiers.rb","solr.rb","token.rb","tokens.rb","weigher.rb","weights.rb","harakiri.rb","base.rb","full.rb","live.rb","signals.rb","sunspot-solr.pid","schema_generator.rb","base.rb","couch.rb","csv.rb","db.rb","delicious.rb","base.rb","location.rb","base.rb","index.rb","query.rb","application.rake","framework.rake","index.rake","routes.rake","server.rake","shortcuts.rake","solr.rake","spec.rake","statistics.rake","try.rake"],"longSearchIndex":["lib/picky/adapters/rack.rb","adapters","adapters::rack","adapters::rack","adapters::rack","lib/picky/application.rb","lib/picky/frontend_adapters/rack.rb","lib/picky/helpers/measuring.rb","helpers","index","lib/picky/index_api.rb","lib/picky/interfaces/live_parameters.rb","interfaces","interfaces::liveparameters","performant","lib/picky/query/weights.rb","query","query","query","rack","lib/picky/sources/wrappers/location.rb","sources","sources","sources","sources","sources","sources","sources","adapters::rack","index::backend","application","rack::harakiri","indexapi","application","interfaces::liveparameters","sources::base","sources::db","application","application","indexapi","indexapi","index::backend","index::backend","index::backend","index::backend","index::backend","query::base","query::base","interfaces::liveparameters","adapters::rack::query","interfaces::liveparameters","rack::harakiri","rack::harakiri","sources::base","sources::csv","sources::couch","sources::db","sources::delicious","application","index::backend","index::backend","sources::couch","interfaces::liveparameters","interfaces::liveparameters","index::backend","index::backend","index::backend","index::backend","adapters::rack::liveparameters","adapters::rack::query","index::backend","indexapi","interfaces::liveparameters","interfaces::liveparameters::couldnotupdateconfigurationerror","query::base","rack::harakiri","sources::csv","sources::couch","sources::db","sources::delicious","interfaces::liveparameters","interfaces::liveparameters","interfaces::liveparameters","interfaces::liveparameters","interfaces::liveparameters","interfaces::liveparameters","interfaces::liveparameters","indexapi","interfaces::liveparameters","adapters::rack::base","index::backend","query::full","query::live","index::backend","query::base","query::base","index::backend","index::backend","interfaces::liveparameters","sources::base","sources::db","helpers::measuring","adapters::rack::liveparameters","adapters::rack::query","query::base","query::base","interfaces::liveparameters","index::backend","index::backend","interfaces::liveparameters","interfaces::liveparameters","files/lib/bundling_rb.html","files/lib/constants_rb.html","files/lib/deployment_rb.html","files/lib/picky-tasks_rb.html","files/lib/picky_rb.html","files/lib/picky/adapters/rack_rb.html","files/lib/picky/adapters/rack/base_rb.html","files/lib/picky/adapters/rack/live_parameters_rb.html","files/lib/picky/adapters/rack/query_rb.html","files/lib/picky/alias_instances_rb.html","files/lib/picky/application_rb.html","files/lib/picky/cacher/convenience_rb.html","files/lib/picky/cacher/generator_rb.html","files/lib/picky/cacher/partial/default_rb.html","files/lib/picky/cacher/partial/none_rb.html","files/lib/picky/cacher/partial/strategy_rb.html","files/lib/picky/cacher/partial/substring_rb.html","files/lib/picky/cacher/partial_generator_rb.html","files/lib/picky/cacher/similarity/default_rb.html","files/lib/picky/cacher/similarity/double_levenshtone_rb.html","files/lib/picky/cacher/similarity/none_rb.html","files/lib/picky/cacher/similarity/strategy_rb.html","files/lib/picky/cacher/similarity_generator_rb.html","files/lib/picky/cacher/strategy_rb.html","files/lib/picky/cacher/weights/default_rb.html","files/lib/picky/cacher/weights/logarithmic_rb.html","files/lib/picky/cacher/weights/strategy_rb.html","files/lib/picky/cacher/weights_generator_rb.html","files/lib/picky/calculations/location_rb.html","files/lib/picky/character_substituters/west_european_rb.html","files/lib/picky/cli_rb.html","files/lib/picky/configuration/index_rb.html","files/lib/picky/cores_rb.html","files/lib/picky/ext/maybe_compile_rb.html","files/lib/picky/ext/ruby19/makefile.html","files/lib/picky/ext/ruby19/extconf_rb.html","files/lib/picky/ext/ruby19/mkmf_log.html","files/lib/picky/ext/ruby19/performant_c.html","files/lib/picky/extensions/array_rb.html","files/lib/picky/extensions/hash_rb.html","files/lib/picky/extensions/module_rb.html","files/lib/picky/extensions/object_rb.html","files/lib/picky/extensions/symbol_rb.html","files/lib/picky/frontend_adapters/rack_rb.html","files/lib/picky/helpers/measuring_rb.html","files/lib/picky/index/backend_rb.html","files/lib/picky/index/bundle_rb.html","files/lib/picky/index/file/basic_rb.html","files/lib/picky/index/file/json_rb.html","files/lib/picky/index/file/marshal_rb.html","files/lib/picky/index/file/text_rb.html","files/lib/picky/index/files_rb.html","files/lib/picky/index/redis_rb.html","files/lib/picky/index/redis/basic_rb.html","files/lib/picky/index/redis/list_hash_rb.html","files/lib/picky/index/redis/string_hash_rb.html","files/lib/picky/index_api_rb.html","files/lib/picky/indexed/bundle/base_rb.html","files/lib/picky/indexed/bundle/memory_rb.html","files/lib/picky/indexed/bundle/redis_rb.html","files/lib/picky/indexed/categories_rb.html","files/lib/picky/indexed/category_rb.html","files/lib/picky/indexed/index_rb.html","files/lib/picky/indexed/indexes_rb.html","files/lib/picky/indexed/wrappers/bundle/calculation_rb.html","files/lib/picky/indexed/wrappers/bundle/location_rb.html","files/lib/picky/indexed/wrappers/bundle/wrapper_rb.html","files/lib/picky/indexed/wrappers/exact_first_rb.html","files/lib/picky/indexers/no_source_specified_error_rb.html","files/lib/picky/indexers/serial_rb.html","files/lib/picky/indexers/solr_rb.html","files/lib/picky/indexes_api_rb.html","files/lib/picky/indexing/bundle/base_rb.html","files/lib/picky/indexing/bundle/memory_rb.html","files/lib/picky/indexing/bundle/redis_rb.html","files/lib/picky/indexing/bundle/super_base_rb.html","files/lib/picky/indexing/categories_rb.html","files/lib/picky/indexing/category_rb.html","files/lib/picky/indexing/index_rb.html","files/lib/picky/indexing/indexes_rb.html","files/lib/picky/interfaces/live_parameters_rb.html","files/lib/picky/loader_rb.html","files/lib/picky/loggers/search_rb.html","files/lib/picky/performant_rb.html","files/lib/picky/query/allocation_rb.html","files/lib/picky/query/allocations_rb.html","files/lib/picky/query/base_rb.html","files/lib/picky/query/combination_rb.html","files/lib/picky/query/combinations_rb.html","files/lib/picky/query/full_rb.html","files/lib/picky/query/live_rb.html","files/lib/picky/query/qualifiers_rb.html","files/lib/picky/query/solr_rb.html","files/lib/picky/query/token_rb.html","files/lib/picky/query/tokens_rb.html","files/lib/picky/query/weigher_rb.html","files/lib/picky/query/weights_rb.html","files/lib/picky/rack/harakiri_rb.html","files/lib/picky/results/base_rb.html","files/lib/picky/results/full_rb.html","files/lib/picky/results/live_rb.html","files/lib/picky/signals_rb.html","files/lib/picky/solr/pids/sunspot-solr_pid.html","files/lib/picky/solr/schema_generator_rb.html","files/lib/picky/sources/base_rb.html","files/lib/picky/sources/couch_rb.html","files/lib/picky/sources/csv_rb.html","files/lib/picky/sources/db_rb.html","files/lib/picky/sources/delicious_rb.html","files/lib/picky/sources/wrappers/base_rb.html","files/lib/picky/sources/wrappers/location_rb.html","files/lib/picky/tokenizers/base_rb.html","files/lib/picky/tokenizers/index_rb.html","files/lib/picky/tokenizers/query_rb.html","files/lib/tasks/application_rake.html","files/lib/tasks/framework_rake.html","files/lib/tasks/index_rake.html","files/lib/tasks/routes_rake.html","files/lib/tasks/server_rake.html","files/lib/tasks/shortcuts_rake.html","files/lib/tasks/solr_rake.html","files/lib/tasks/spec_rake.html","files/lib/tasks/statistics_rake.html","files/lib/tasks/try_rake.html"],"info":[["Adapters","lib/picky/adapters/rack/base.rb","classes/Adapters.html"," < ","",1],["Rack","Adapters","classes/Adapters/Rack.html"," < ","Adapter that is plugged into a Rack outlet. --- --- This is an adapter that is plugged into a Rack outlet.",1],["Base","Adapters::Rack","classes/Adapters/Rack/Base.html"," < Object","Subclasses of this class should respond to * to_app(options) ",1],["LiveParameters","Adapters::Rack","classes/Adapters/Rack/LiveParameters.html"," < Base","",1],["Query","Adapters::Rack","classes/Adapters/Rack/Query.html"," < Base","",1],["Application","lib/picky/application.rb","classes/Application.html"," < Object","= Picky Applications A Picky Application is where you configure the whole search engine. This is a step-by-step",1],["FrontendAdapters","lib/picky/frontend_adapters/rack.rb","classes/FrontendAdapters.html"," < ","",1],["Helpers","lib/picky/helpers/measuring.rb","classes/Helpers.html"," < ","Helper methods for measuring, benchmarking, logging. ",1],["Measuring","Helpers","classes/Helpers/Measuring.html"," < ","",1],["Backend","Index","classes/Index/Backend.html"," < Object","",1],["IndexAPI","lib/picky/index_api.rb","classes/IndexAPI.html"," < Object","This class defines the indexing and index API that is exposed to the user as the #index method inside",1],["Interfaces","lib/picky/interfaces/live_parameters.rb","classes/Interfaces.html"," < ","This is very optional. Only load if the user wants it. ",1],["LiveParameters","Interfaces","classes/Interfaces/LiveParameters.html"," < Object","This is an interface that provides the user of Picky with the possibility to change parameters while",1],["CouldNotUpdateConfigurationError","Interfaces::LiveParameters","classes/Interfaces/LiveParameters/CouldNotUpdateConfigurationError.html"," < StandardError","",1],["Array","Performant","classes/Performant/Array.html"," < Object","#include \"ruby.h\"  // Copying internal ruby methods. // static inline VALUE rb_ary_elt(ary, offset) ",1],["Query","lib/picky/query/allocation.rb","classes/Query.html"," < ","= Picky Queries A Picky Query is an object which: * holds one or more indexes * offers an interface to",1],["Base","Query","classes/Query/Base.html"," < Object","The base query class. Not directly instantiated. However, its methods are used by its subclasses, Full",1],["Full","Query","classes/Query/Full.html"," < Base","This Query class performs full queries. It includes in its results: * A count of results. * All possible",1],["Live","Query","classes/Query/Live.html"," < Base","This Query class performs live queries. It is useful for updating counters, or any job where you don't",1],["Harakiri","Rack","classes/Rack/Harakiri.html"," < Object","Simple Rack Middleware to kill Unicorns after X requests. Use as follows in e.g. your rackup File: Rack::Harakiri.after",1],["Sources","lib/picky/sources/base.rb","classes/Sources.html"," < ","= Data Sources Currently, Picky offers the following Sources: * CSV (comma  or other  separated",1],["Base","Sources","classes/Sources/Base.html"," < Object","Sources are where your data comes from. A source has 1 mandatory and 2 optional methods: * connect_backend",1],["CSV","Sources","classes/Sources/CSV.html"," < Base","Describes a CSV source, a file with comma separated values in it. The first column is implicitly assumed",1],["Couch","Sources","classes/Sources/Couch.html"," < Base","A Couch database source. Options: * url and all the options of a <tt>RestClient::Resource</tt>. See http://github.com/archiloque/rest-client.",1],["DB","Sources","classes/Sources/DB.html"," < Base","Describes a database source. Needs a SELECT statement (with id in it), and a file option or the options",1],["Delicious","Sources","classes/Sources/Delicious.html"," < Base","Describes a Delicious (http://deli.cio.us) source. This source has a fixed set of categories: * title",1],["NoCSVFileGiven","Sources","classes/Sources/NoCSVFileGiven.html"," < StandardError","Raised when a CSV source is instantiated without a file. Example: Sources::CSV.new(:column1, :column2)",1],["NoCouchDBGiven","Sources","classes/Sources/NoCouchDBGiven.html"," < StandardError","Raised when a Couch source is instantiated without a file. Example: Sources::Couch.new(:column1, :column2)",1],["app_for","Adapters::Rack","classes/Adapters/Rack.html#M000006","(thing, options = {})","",2],["backup","Index::Backend","classes/Index/Backend.html#M000037","()","Copies the indexes to the \"backup\" directory. ",2],["call","Application","classes/Application.html#M000010","(env)","A Picky application implements the Rack interface. Delegates to its routing to handle a request. ",2],["call","Rack::Harakiri","classes/Rack/Harakiri.html#M000079","(env)","#call interface method. Harakiri is a middleware, so it delegates the the app or the next middleware",2],["category","IndexAPI","classes/IndexAPI.html#M000042","(category_name, options = {})","Alias for #define_category",2],["check_external_interface","Application","classes/Application.html#M000017","()","",2],["close_child","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000055","()","Close the child if it isn't yet closed. ",2],["connect_backend","Sources::Base","classes/Sources/Base.html#M000082","()","Connect to the backend. Called once per index/category combination before harvesting. Examples: * The",2],["connect_backend","Sources::DB","classes/Sources/DB.html#M000098","()","Connect the backend. Will raise unless connection options have been given. ",2],["default_indexing","Application","classes/Application.html#M000007","(options = {})","Returns a configured tokenizer that is used for indexing by default. ",2],["default_querying","Application","classes/Application.html#M000008","(options = {})","Returns a configured tokenizer that is used for querying by default. ",2],["define_category","IndexAPI","classes/IndexAPI.html#M000041","(category_name, options = {})","Defines a searchable category on the index. === Parameters * category_name: This identifier is used in",2],["define_ranged_category","IndexAPI","classes/IndexAPI.html#M000043","(category_name, range, options = {})","HIGHLY EXPERIMENTAL Try if you feel \"beta\" ;) Make this category range searchable with a fixed range.",2],["delete","Index::Backend","classes/Index/Backend.html#M000039","()","Delete all index files. ",2],["dump_configuration","Index::Backend","classes/Index/Backend.html#M000026","(configuration_hash)","",2],["dump_index","Index::Backend","classes/Index/Backend.html#M000023","(index_hash)","Dumping. ",2],["dump_similarity","Index::Backend","classes/Index/Backend.html#M000025","(similarity_hash)","",2],["dump_weights","Index::Backend","classes/Index/Backend.html#M000024","(weights_hash)","",2],["empty_results","Query::Base","classes/Query/Base.html#M000069","(offset = 0)","Returns an empty result with default values. Parameters: * offset = 0: _optional_ The offset to use for",2],["execute","Query::Base","classes/Query/Base.html#M000068","(tokens, offset)","Execute a search using Query::Tokens. Note: Internal method, use #search_with_text. ",2],["extract_configuration","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000058","()","",2],["extracted","Adapters::Rack::Query","classes/Adapters/Rack/Query.html#M000005","(params)","",2],["harakiri","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000053","()","Kills itself, but still answering the request honorably. ",2],["harakiri","Rack::Harakiri","classes/Rack/Harakiri.html#M000080","()","Checks to see if it is time to honorably retire. If yes, kills itself (Unicorn will answer the request,",2],["harakiri?","Rack::Harakiri","classes/Rack/Harakiri.html#M000081","()","Is it time to honorably retire? ",2],["harvest","Sources::Base","classes/Sources/Base.html#M000083","(index, category)","Called by the indexer when gathering data. Yields the data (id, text for id) for the given type and category.",2],["harvest","Sources::CSV","classes/Sources/CSV.html#M000093","(_, category)","Harvests the data to index. ",2],["harvest","Sources::Couch","classes/Sources/Couch.html#M000088","(type, category)","",2],["harvest","Sources::DB","classes/Sources/DB.html#M000102","(type, category, &block)","Harvests the data to index in chunks. ",2],["harvest","Sources::Delicious","classes/Sources/Delicious.html#M000106","(_, category)","Harvests the data to index. ",2],["index","Application","classes/Application.html#M000009","(name, source, options = {})","Create a new index for indexing and for querying. Parameters: * name: The identifier of the index. Used:",2],["index_cache_ok?","Index::Backend","classes/Index/Backend.html#M000031","()","Cache ok? ",2],["index_cache_small?","Index::Backend","classes/Index/Backend.html#M000034","()","Cache small? ",2],["key_format","Sources::Couch","classes/Sources/Couch.html#M000086","()","Default key format method for couch DB is to_sym.  ",2],["kill_each_worker_except","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000049","(pid)","Taken from Unicorn. ",2],["kill_worker","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000050","(signal, wpid)","",2],["load_configuration","Index::Backend","classes/Index/Backend.html#M000030","()","",2],["load_index","Index::Backend","classes/Index/Backend.html#M000027","()","Loading. ",2],["load_similarity","Index::Backend","classes/Index/Backend.html#M000028","()","",2],["load_weights","Index::Backend","classes/Index/Backend.html#M000029","()","",2],["new","Adapters::Rack::LiveParameters","classes/Adapters/Rack/LiveParameters.html#M000001","(live_parameters)","",2],["new","Adapters::Rack::Query","classes/Adapters/Rack/Query.html#M000003","(query)","",2],["new","Index::Backend","classes/Index/Backend.html#M000021","(bundle_name, config)","",2],["new","IndexAPI","classes/IndexAPI.html#M000040","(name, source, options = {})","Create a new index with a given source. === Parameters * name: A name that will be used for the index",2],["new","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000046","()","",2],["new","Interfaces::LiveParameters::CouldNotUpdateConfigurationError","classes/Interfaces/LiveParameters/CouldNotUpdateConfigurationError.html#M000056","(config_key, message)","",2],["new","Query::Base","classes/Query/Base.html#M000065","(*index_type_definitions)","Takes: * A number of indexes * Options hash (optional) with: * weigher:   A weigher. Query::Weigher by",2],["new","Rack::Harakiri","classes/Rack/Harakiri.html#M000078","(app)","",2],["new","Sources::CSV","classes/Sources/CSV.html#M000091","(*category_names, options)","",2],["new","Sources::Couch","classes/Sources/Couch.html#M000085","(*category_names, options)","",2],["new","Sources::DB","classes/Sources/DB.html#M000095","(select_statement, options = { file: 'app/db.yml' })","",2],["new","Sources::Delicious","classes/Sources/Delicious.html#M000104","(username, password)","",2],["parameters","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000052","(configuration_hash)","Updates any parameters with the ones given and returns the updated params. The params are a strictly",2],["querying_removes_characters","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000059","()","TODO Move to Interface object. ",2],["querying_removes_characters=","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000060","(new_value)","",2],["querying_splits_text_on","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000063","()","",2],["querying_splits_text_on=","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000064","(new_value)","",2],["querying_stopwords","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000061","()","",2],["querying_stopwords=","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000062","(new_value)","",2],["ranged_category","IndexAPI","classes/IndexAPI.html#M000044","(category_name, range, options = {})","Alias for #define_ranged_category",2],["remove_worker","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000051","(wpid)","TODO This needs to be Webserver agnostic. ",2],["respond_with","Adapters::Rack::Base","classes/Adapters/Rack/Base.html#M000000","(response, content_type = 'application/json')","Puts together an appropriately structured Rack response. Note: Bytesize is needed to have special characters",2],["restore","Index::Backend","classes/Index/Backend.html#M000038","()","Restores the indexes from the \"backup\" directory. ",2],["result_type","Query::Full","classes/Query/Full.html#M000076","()","Returns Results::Full as its result type. ",2],["result_type","Query::Live","classes/Query/Live.html#M000077","()","Returns Results::Live as its result type. ",2],["retrieve","Index::Backend","classes/Index/Backend.html#M000022","(&block)","Retrieving data. ",2],["search","Query::Base","classes/Query/Base.html#M000067","(tokens, offset = 0)","Runs the actual search using Query::Tokens. Note: Internal method, use #search_with_text. ",2],["search_with_text","Query::Base","classes/Query/Base.html#M000066","(text, offset = 0)","This is the main entry point for a query. Use this in specs and also for running queries. Parameters:",2],["similarity_cache_ok?","Index::Backend","classes/Index/Backend.html#M000032","()","",2],["similarity_cache_small?","Index::Backend","classes/Index/Backend.html#M000035","()","",2],["start_master_process_thread","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000047","()","This runs a thread that listens to child processes. ",2],["take_snapshot","Sources::Base","classes/Sources/Base.html#M000084","(index)","Used to take a snapshot of your data if it is fast changing. Called once for each type before harvesting.",2],["take_snapshot","Sources::DB","classes/Sources/DB.html#M000099","(type)","Take a snapshot of the data. Uses CREATE TABLE AS with the given SELECT statement to create a snapshot",2],["timed","Helpers::Measuring","classes/Helpers/Measuring.html#M000020","(*args, &block)","Returns a duration in seconds. ",2],["to_app","Adapters::Rack::LiveParameters","classes/Adapters/Rack/LiveParameters.html#M000002","(options = {})","",2],["to_app","Adapters::Rack::Query","classes/Adapters/Rack/Query.html#M000004","(options = {})","",2],["to_s","Query::Base","classes/Query/Base.html#M000075","()","Display some nice information for the user. ",2],["tokenized","Query::Base","classes/Query/Base.html#M000070","(text)","Delegates the tokenizing to the query tokenizer. Parameters: * text: The text to tokenize. ",2],["try_updating_configuration_with","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000057","(configuration_hash)","Tries updating the configuration in the child process or parent process. ",2],["weights_cache_ok?","Index::Backend","classes/Index/Backend.html#M000033","()","",2],["weights_cache_small?","Index::Backend","classes/Index/Backend.html#M000036","()","",2],["worker_pids","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000048","()","TODO This needs to be webserver agnostic. ",2],["write_parent","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000054","(configuration_hash)","Write the parent. Note: The ;;; is the end marker for the message. ",2],["bundling.rb","files/lib/bundling_rb.html","files/lib/bundling_rb.html","","",3],["constants.rb","files/lib/constants_rb.html","files/lib/constants_rb.html","","Set constants. ",3],["deployment.rb","files/lib/deployment_rb.html","files/lib/deployment_rb.html","","",3],["picky-tasks.rb","files/lib/picky-tasks_rb.html","files/lib/picky-tasks_rb.html","","",3],["picky.rb","files/lib/picky_rb.html","files/lib/picky_rb.html","","Require the constants. ",3],["rack.rb","files/lib/picky/adapters/rack_rb.html","files/lib/picky/adapters/rack_rb.html","","",3],["base.rb","files/lib/picky/adapters/rack/base_rb.html","files/lib/picky/adapters/rack/base_rb.html","","",3],["live_parameters.rb","files/lib/picky/adapters/rack/live_parameters_rb.html","files/lib/picky/adapters/rack/live_parameters_rb.html","","",3],["query.rb","files/lib/picky/adapters/rack/query_rb.html","files/lib/picky/adapters/rack/query_rb.html","","",3],["alias_instances.rb","files/lib/picky/alias_instances_rb.html","files/lib/picky/alias_instances_rb.html","","This provides a nice accessor for users who want to use the index API. TODO Rename to API::Indexes? ",3],["application.rb","files/lib/picky/application_rb.html","files/lib/picky/application_rb.html","","= Picky Applications A Picky Application is where you configure the whole search engine. This is a step-by-step",3],["convenience.rb","files/lib/picky/cacher/convenience_rb.html","files/lib/picky/cacher/convenience_rb.html","","",3],["generator.rb","files/lib/picky/cacher/generator_rb.html","files/lib/picky/cacher/generator_rb.html","","",3],["default.rb","files/lib/picky/cacher/partial/default_rb.html","files/lib/picky/cacher/partial/default_rb.html","","",3],["none.rb","files/lib/picky/cacher/partial/none_rb.html","files/lib/picky/cacher/partial/none_rb.html","","",3],["strategy.rb","files/lib/picky/cacher/partial/strategy_rb.html","files/lib/picky/cacher/partial/strategy_rb.html","","",3],["substring.rb","files/lib/picky/cacher/partial/substring_rb.html","files/lib/picky/cacher/partial/substring_rb.html","","",3],["partial_generator.rb","files/lib/picky/cacher/partial_generator_rb.html","files/lib/picky/cacher/partial_generator_rb.html","","",3],["default.rb","files/lib/picky/cacher/similarity/default_rb.html","files/lib/picky/cacher/similarity/default_rb.html","","",3],["double_levenshtone.rb","files/lib/picky/cacher/similarity/double_levenshtone_rb.html","files/lib/picky/cacher/similarity/double_levenshtone_rb.html","","encoding: utf-8 ",3],["none.rb","files/lib/picky/cacher/similarity/none_rb.html","files/lib/picky/cacher/similarity/none_rb.html","","",3],["strategy.rb","files/lib/picky/cacher/similarity/strategy_rb.html","files/lib/picky/cacher/similarity/strategy_rb.html","","",3],["similarity_generator.rb","files/lib/picky/cacher/similarity_generator_rb.html","files/lib/picky/cacher/similarity_generator_rb.html","","",3],["strategy.rb","files/lib/picky/cacher/strategy_rb.html","files/lib/picky/cacher/strategy_rb.html","","",3],["default.rb","files/lib/picky/cacher/weights/default_rb.html","files/lib/picky/cacher/weights/default_rb.html","","",3],["logarithmic.rb","files/lib/picky/cacher/weights/logarithmic_rb.html","files/lib/picky/cacher/weights/logarithmic_rb.html","","",3],["strategy.rb","files/lib/picky/cacher/weights/strategy_rb.html","files/lib/picky/cacher/weights/strategy_rb.html","","",3],["weights_generator.rb","files/lib/picky/cacher/weights_generator_rb.html","files/lib/picky/cacher/weights_generator_rb.html","","",3],["location.rb","files/lib/picky/calculations/location_rb.html","files/lib/picky/calculations/location_rb.html","","",3],["west_european.rb","files/lib/picky/character_substituters/west_european_rb.html","files/lib/picky/character_substituters/west_european_rb.html","","encoding: utf-8 ",3],["cli.rb","files/lib/picky/cli_rb.html","files/lib/picky/cli_rb.html","","",3],["index.rb","files/lib/picky/configuration/index_rb.html","files/lib/picky/configuration/index_rb.html","","",3],["cores.rb","files/lib/picky/cores_rb.html","files/lib/picky/cores_rb.html","","",3],["maybe_compile.rb","files/lib/picky/ext/maybe_compile_rb.html","files/lib/picky/ext/maybe_compile_rb.html","","",3],["Makefile","files/lib/picky/ext/ruby19/Makefile.html","files/lib/picky/ext/ruby19/Makefile.html",""," SHELL = /bin/sh  #### Start of system configuration section. ####  srcdir = . topdir = /Users/admin/.rvm/rubies/ruby-1.9.2-p0/include/ruby-1.9.1",3],["extconf.rb","files/lib/picky/ext/ruby19/extconf_rb.html","files/lib/picky/ext/ruby19/extconf_rb.html","","",3],["mkmf.log","files/lib/picky/ext/ruby19/mkmf_log.html","files/lib/picky/ext/ruby19/mkmf_log.html","","have_header: checking for ruby.h... -------------------- yes  \"gcc -o conftest -I/Users/admin/.rvm/rubies/ruby-1.9.2-p0/include/ruby-1.9.1/x86_64-darwin10.4.0",3],["performant.c","files/lib/picky/ext/ruby19/performant_c.html","files/lib/picky/ext/ruby19/performant_c.html","","",3],["array.rb","files/lib/picky/extensions/array_rb.html","files/lib/picky/extensions/array_rb.html","","The Array class we all know and love. ",3],["hash.rb","files/lib/picky/extensions/hash_rb.html","files/lib/picky/extensions/hash_rb.html","","Extensions for the Hash. ",3],["module.rb","files/lib/picky/extensions/module_rb.html","files/lib/picky/extensions/module_rb.html","","The original Module class. ",3],["object.rb","files/lib/picky/extensions/object_rb.html","files/lib/picky/extensions/object_rb.html","","",3],["symbol.rb","files/lib/picky/extensions/symbol_rb.html","files/lib/picky/extensions/symbol_rb.html","","Extending the Symbol class. ",3],["rack.rb","files/lib/picky/frontend_adapters/rack_rb.html","files/lib/picky/frontend_adapters/rack_rb.html","","",3],["measuring.rb","files/lib/picky/helpers/measuring_rb.html","files/lib/picky/helpers/measuring_rb.html","","Helper methods for measuring, benchmarking, logging. ",3],["backend.rb","files/lib/picky/index/backend_rb.html","files/lib/picky/index/backend_rb.html","","",3],["bundle.rb","files/lib/picky/index/bundle_rb.html","files/lib/picky/index/bundle_rb.html","","",3],["basic.rb","files/lib/picky/index/file/basic_rb.html","files/lib/picky/index/file/basic_rb.html","","",3],["json.rb","files/lib/picky/index/file/json_rb.html","files/lib/picky/index/file/json_rb.html","","",3],["marshal.rb","files/lib/picky/index/file/marshal_rb.html","files/lib/picky/index/file/marshal_rb.html","","",3],["text.rb","files/lib/picky/index/file/text_rb.html","files/lib/picky/index/file/text_rb.html","","",3],["files.rb","files/lib/picky/index/files_rb.html","files/lib/picky/index/files_rb.html","","",3],["redis.rb","files/lib/picky/index/redis_rb.html","files/lib/picky/index/redis_rb.html","","",3],["basic.rb","files/lib/picky/index/redis/basic_rb.html","files/lib/picky/index/redis/basic_rb.html","","",3],["list_hash.rb","files/lib/picky/index/redis/list_hash_rb.html","files/lib/picky/index/redis/list_hash_rb.html","","",3],["string_hash.rb","files/lib/picky/index/redis/string_hash_rb.html","files/lib/picky/index/redis/string_hash_rb.html","","",3],["index_api.rb","files/lib/picky/index_api_rb.html","files/lib/picky/index_api_rb.html","","This class defines the indexing and index API that is exposed to the user as the #index method inside",3],["base.rb","files/lib/picky/indexed/bundle/base_rb.html","files/lib/picky/indexed/bundle/base_rb.html","","",3],["memory.rb","files/lib/picky/indexed/bundle/memory_rb.html","files/lib/picky/indexed/bundle/memory_rb.html","","encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 ",3],["redis.rb","files/lib/picky/indexed/bundle/redis_rb.html","files/lib/picky/indexed/bundle/redis_rb.html","","encoding: utf-8 ",3],["categories.rb","files/lib/picky/indexed/categories_rb.html","files/lib/picky/indexed/categories_rb.html","","",3],["category.rb","files/lib/picky/indexed/category_rb.html","files/lib/picky/indexed/category_rb.html","","",3],["index.rb","files/lib/picky/indexed/index_rb.html","files/lib/picky/indexed/index_rb.html","","",3],["indexes.rb","files/lib/picky/indexed/indexes_rb.html","files/lib/picky/indexed/indexes_rb.html","","",3],["calculation.rb","files/lib/picky/indexed/wrappers/bundle/calculation_rb.html","files/lib/picky/indexed/wrappers/bundle/calculation_rb.html","","",3],["location.rb","files/lib/picky/indexed/wrappers/bundle/location_rb.html","files/lib/picky/indexed/wrappers/bundle/location_rb.html","","",3],["wrapper.rb","files/lib/picky/indexed/wrappers/bundle/wrapper_rb.html","files/lib/picky/indexed/wrappers/bundle/wrapper_rb.html","","",3],["exact_first.rb","files/lib/picky/indexed/wrappers/exact_first_rb.html","files/lib/picky/indexed/wrappers/exact_first_rb.html","","encoding: utf-8 ",3],["no_source_specified_error.rb","files/lib/picky/indexers/no_source_specified_error_rb.html","files/lib/picky/indexers/no_source_specified_error_rb.html","","",3],["serial.rb","files/lib/picky/indexers/serial_rb.html","files/lib/picky/indexers/serial_rb.html","","encoding: utf-8 ",3],["solr.rb","files/lib/picky/indexers/solr_rb.html","files/lib/picky/indexers/solr_rb.html","","encoding: utf-8 ",3],["indexes_api.rb","files/lib/picky/indexes_api_rb.html","files/lib/picky/indexes_api_rb.html","","Comfortable API convenience class, splits methods to indexes. ",3],["base.rb","files/lib/picky/indexing/bundle/base_rb.html","files/lib/picky/indexing/bundle/base_rb.html","","encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 ",3],["memory.rb","files/lib/picky/indexing/bundle/memory_rb.html","files/lib/picky/indexing/bundle/memory_rb.html","","encoding: utf-8 ",3],["redis.rb","files/lib/picky/indexing/bundle/redis_rb.html","files/lib/picky/indexing/bundle/redis_rb.html","","encoding: utf-8 ",3],["super_base.rb","files/lib/picky/indexing/bundle/super_base_rb.html","files/lib/picky/indexing/bundle/super_base_rb.html","","",3],["categories.rb","files/lib/picky/indexing/categories_rb.html","files/lib/picky/indexing/categories_rb.html","","",3],["category.rb","files/lib/picky/indexing/category_rb.html","files/lib/picky/indexing/category_rb.html","","",3],["index.rb","files/lib/picky/indexing/index_rb.html","files/lib/picky/indexing/index_rb.html","","",3],["indexes.rb","files/lib/picky/indexing/indexes_rb.html","files/lib/picky/indexing/indexes_rb.html","","",3],["live_parameters.rb","files/lib/picky/interfaces/live_parameters_rb.html","files/lib/picky/interfaces/live_parameters_rb.html","","This is very optional. Only load if the user wants it. ",3],["loader.rb","files/lib/picky/loader_rb.html","files/lib/picky/loader_rb.html","","Loads the search engine and itself. ",3],["search.rb","files/lib/picky/loggers/search_rb.html","files/lib/picky/loggers/search_rb.html","","encoding: utf-8 ",3],["performant.rb","files/lib/picky/performant_rb.html","files/lib/picky/performant_rb.html","","",3],["allocation.rb","files/lib/picky/query/allocation_rb.html","files/lib/picky/query/allocation_rb.html","","",3],["allocations.rb","files/lib/picky/query/allocations_rb.html","files/lib/picky/query/allocations_rb.html","","",3],["base.rb","files/lib/picky/query/base_rb.html","files/lib/picky/query/base_rb.html","","= Picky Queries A Picky Query is an object which: * holds one or more indexes * offers an interface to",3],["combination.rb","files/lib/picky/query/combination_rb.html","files/lib/picky/query/combination_rb.html","","",3],["combinations.rb","files/lib/picky/query/combinations_rb.html","files/lib/picky/query/combinations_rb.html","","",3],["full.rb","files/lib/picky/query/full_rb.html","files/lib/picky/query/full_rb.html","","",3],["live.rb","files/lib/picky/query/live_rb.html","files/lib/picky/query/live_rb.html","","",3],["qualifiers.rb","files/lib/picky/query/qualifiers_rb.html","files/lib/picky/query/qualifiers_rb.html","","coding: utf-8 ",3],["solr.rb","files/lib/picky/query/solr_rb.html","files/lib/picky/query/solr_rb.html","","",3],["token.rb","files/lib/picky/query/token_rb.html","files/lib/picky/query/token_rb.html","","",3],["tokens.rb","files/lib/picky/query/tokens_rb.html","files/lib/picky/query/tokens_rb.html","","encoding: utf-8 ",3],["weigher.rb","files/lib/picky/query/weigher_rb.html","files/lib/picky/query/weigher_rb.html","","",3],["weights.rb","files/lib/picky/query/weights_rb.html","files/lib/picky/query/weights_rb.html","","",3],["harakiri.rb","files/lib/picky/rack/harakiri_rb.html","files/lib/picky/rack/harakiri_rb.html","","",3],["base.rb","files/lib/picky/results/base_rb.html","files/lib/picky/results/base_rb.html","","",3],["full.rb","files/lib/picky/results/full_rb.html","files/lib/picky/results/full_rb.html","","",3],["live.rb","files/lib/picky/results/live_rb.html","files/lib/picky/results/live_rb.html","","",3],["signals.rb","files/lib/picky/signals_rb.html","files/lib/picky/signals_rb.html","","TODO Cleanup and move to project_prototype. Signal.trap 'USR1' do Indexes.reload end Signal.trap 'USR2'",3],["sunspot-solr.pid","files/lib/picky/solr/pids/sunspot-solr_pid.html","files/lib/picky/solr/pids/sunspot-solr_pid.html","","26985",3],["schema_generator.rb","files/lib/picky/solr/schema_generator_rb.html","files/lib/picky/solr/schema_generator_rb.html","","",3],["base.rb","files/lib/picky/sources/base_rb.html","files/lib/picky/sources/base_rb.html","","= Data Sources Currently, Picky offers the following Sources: * CSV (comma  or other  separated",3],["couch.rb","files/lib/picky/sources/couch_rb.html","files/lib/picky/sources/couch_rb.html","","",3],["csv.rb","files/lib/picky/sources/csv_rb.html","files/lib/picky/sources/csv_rb.html","","",3],["db.rb","files/lib/picky/sources/db_rb.html","files/lib/picky/sources/db_rb.html","","",3],["delicious.rb","files/lib/picky/sources/delicious_rb.html","files/lib/picky/sources/delicious_rb.html","","",3],["base.rb","files/lib/picky/sources/wrappers/base_rb.html","files/lib/picky/sources/wrappers/base_rb.html","","",3],["location.rb","files/lib/picky/sources/wrappers/location_rb.html","files/lib/picky/sources/wrappers/location_rb.html","","",3],["base.rb","files/lib/picky/tokenizers/base_rb.html","files/lib/picky/tokenizers/base_rb.html","","",3],["index.rb","files/lib/picky/tokenizers/index_rb.html","files/lib/picky/tokenizers/index_rb.html","","",3],["query.rb","files/lib/picky/tokenizers/query_rb.html","files/lib/picky/tokenizers/query_rb.html","","encoding: utf-8 ",3],["application.rake","files/lib/tasks/application_rake.html","files/lib/tasks/application_rake.html","","# desc \"Loads the application, including its configuration.\" task :application => :framework do   Loader.load_application",3],["framework.rake","files/lib/tasks/framework_rake.html","files/lib/tasks/framework_rake.html","","# desc \"Loads the framework.\" task :framework do   require File.expand_path '../../picky', __FILE__ end",3],["index.rake","files/lib/tasks/index_rake.html","files/lib/tasks/index_rake.html","","# Global. # namespace :index do      desc \"Takes a snapshot, indexes, and caches in random order.\"  ",3],["routes.rake","files/lib/tasks/routes_rake.html","files/lib/tasks/routes_rake.html","","desc \"Shows the available URL paths\" task :routes => :application do   puts \"Note: Anchored (\\u2713)",3],["server.rake","files/lib/tasks/server_rake.html","files/lib/tasks/server_rake.html","","# TODO This file needs some love. # namespace :server do      def chdir_to_root     Dir.chdir PICKY_ROOT",3],["shortcuts.rake","files/lib/tasks/shortcuts_rake.html","files/lib/tasks/shortcuts_rake.html","","desc \"Generate the index (random order).\" task :index => :application do   Rake::Task[:'index:randomly'].invoke",3],["solr.rake","files/lib/tasks/solr_rake.html","files/lib/tasks/solr_rake.html","","# sunspot-solr start --solr-home=solr --data-directory=index/development/solr --pid-dir=solr/pids --log-file=log/solr.log",3],["spec.rake","files/lib/tasks/spec_rake.html","files/lib/tasks/spec_rake.html","","require 'spec' require 'spec/rake/spectask'  task :default => :spec  desc \"Run all specs\" Spec::Rake::SpecTask.new(:spec)",3],["statistics.rake","files/lib/tasks/statistics_rake.html","files/lib/tasks/statistics_rake.html","","namespace :statistics do    # desc \"start the server\"   # task :start => :application do   #   Statistics.start",3],["try.rake","files/lib/tasks/try_rake.html","files/lib/tasks/try_rake.html","","# Tasks for manually testing your engine configuration. # namespace :try do      # desc \"Try how a given",3]]}}