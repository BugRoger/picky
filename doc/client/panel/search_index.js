var search_data = {"index":{"searchIndex":["hash","picky","client","base","full","live","convenience","helper","allocations()","allocations_size()","cached_interface()","clear_ids()","default_configuration()","default_configuration()","default_params()","default_params()","defaultize()","empty?()","entries()","ids()","interface()","new()","populate_with()","replace_ids_with()","search()","send_search()","send_search()","to_query()","total()","picky-client.rb","convenience.rb","engine.rb","helper.rb"],"longSearchIndex":["lib/picky-client/engine.rb","lib/picky-client/helper.rb","picky","picky::client","picky::client","picky::client","picky","picky","picky::convenience","picky::convenience","picky::helper","picky::convenience","picky::client::base","picky::client::base","picky::client::base","picky::client::base","picky::client::base","picky::convenience","picky::convenience","picky::convenience","picky::helper","picky::client::base","picky::convenience","picky::convenience","picky::client::base","picky::client::base","picky::client::full","hash","picky::convenience","files/lib/picky-client_rb.html","files/lib/picky-client/convenience_rb.html","files/lib/picky-client/engine_rb.html","files/lib/picky-client/helper_rb.html"],"info":[["Hash","lib/picky-client/engine.rb","classes/Hash.html"," < Object","",1],["Picky","lib/picky-client/convenience.rb","classes/Picky.html"," < ","",1],["Client","Picky","classes/Picky/Client.html"," < ","Frontend for the search client. Configure a search by passing the options in the initializer: * host",1],["Base","Picky::Client","classes/Picky/Client/Base.html"," < Object","",1],["Full","Picky::Client","classes/Picky/Client/Full.html"," < Base","",1],["Live","Picky::Client","classes/Picky/Client/Live.html"," < Base","",1],["Convenience","Picky","classes/Picky/Convenience.html"," < ","Use this class to extend the hash the serializer returns. ",1],["Helper","Picky","classes/Picky/Helper.html"," < Object","This class provides a few view helpers. ",1],["allocations","Picky::Convenience","classes/Picky/Convenience.html#M000003","()","Caching readers. ",2],["allocations_size","Picky::Convenience","classes/Picky/Convenience.html#M000004","()","",2],["cached_interface","Picky::Helper","classes/Picky/Helper.html#M000018","(options = {})","Returns a cached version if you always use a single language. ",2],["clear_ids","Picky::Convenience","classes/Picky/Convenience.html#M000002","()","Removes the ids from each allocation. ",2],["default_configuration","Picky::Client::Base","classes/Picky/Client/Base.html#M000011","(options = {})","",2],["default_configuration","Picky::Client::Base","classes/Picky/Client/Base.html#M000010","()","",2],["default_params","Picky::Client::Base","classes/Picky/Client/Base.html#M000013","(options = {})","",2],["default_params","Picky::Client::Base","classes/Picky/Client/Base.html#M000012","()","",2],["defaultize","Picky::Client::Base","classes/Picky/Client/Base.html#M000014","(params = {})","Merges the given params, overriding the defaults. ",2],["empty?","Picky::Convenience","classes/Picky/Convenience.html#M000000","()","Are there any allocations? ",2],["entries","Picky::Convenience","classes/Picky/Convenience.html#M000007","(limit = 20)","The rendered results or AR instances if you have populated the results. ",2],["ids","Picky::Convenience","classes/Picky/Convenience.html#M000001","(limit = 20)","Returns the topmost limit results. ",2],["interface","Picky::Helper","classes/Picky/Helper.html#M000017","(options = {})","Returns a standard search interface for easy starting. ... aka scaffolding ;) Options: * button: The",2],["new","Picky::Client::Base","classes/Picky/Client/Base.html#M000009","(options = {})","",2],["populate_with","Picky::Convenience","classes/Picky/Convenience.html#M000006","(klass, amount = 20, options = {})","Populating the results. Give it an AR class and options for the find and it will yield each found result",2],["replace_ids_with","Picky::Convenience","classes/Picky/Convenience.html#M000008","(entries)","The ids need to come in the order which the ids were returned by the ids method. ",2],["search","Picky::Client::Base","classes/Picky/Client/Base.html#M000015","(params = {})","Searches the index. Use this method. Returns a hash. Extend with Convenience. ",2],["send_search","Picky::Client::Base","classes/Picky/Client/Base.html#M000016","(params = {})","Sends a search to the configured address. ",2],["send_search","Picky::Client::Full","classes/Picky/Client/Full.html#M000019","(params = {})","",2],["to_query","Hash","classes/Hash.html#M000020","(namespace = nil)","",2],["total","Picky::Convenience","classes/Picky/Convenience.html#M000005","()","",2],["picky-client.rb","files/lib/picky-client_rb.html","files/lib/picky-client_rb.html","","",3],["convenience.rb","files/lib/picky-client/convenience_rb.html","files/lib/picky-client/convenience_rb.html","","",3],["engine.rb","files/lib/picky-client/engine_rb.html","files/lib/picky-client/engine_rb.html","","",3],["helper.rb","files/lib/picky-client/helper_rb.html","files/lib/picky-client/helper_rb.html","","",3]]}}